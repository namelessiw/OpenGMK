use crate::{
    game::Game,
    gml::{Function, InstanceVariable},
};
use phf::{phf_map, phf_ordered_map};

pub mod constants {
    pub const ANSI_CHARSET: f64 = 0.0f64;
    pub const ARABIC_CHARSET: f64 = 178.0;
    pub const BALTIC_CHARSET: f64 = 186.0;
    pub const CHINESEBIG5_CHARSET: f64 = 136.0;
    pub const DEFAULT_CHARSET: f64 = 1.0;
    pub const EASTEUROPE_CHARSET: f64 = 238.0;
    pub const GB2312_CHARSET: f64 = 134.0;
    pub const GREEK_CHARSET: f64 = 161.0;
    pub const HANGEUL_CHARSET: f64 = 129.0;
    pub const HEBREW_CHARSET: f64 = 177.0;
    pub const JOHAB_CHARSET: f64 = 130.0;
    pub const MAC_CHARSET: f64 = 77.0;
    pub const OEM_CHARSET: f64 = 255.0;
    pub const RUSSIAN_CHARSET: f64 = 204.0;
    pub const SHIFTJIS_CHARSET: f64 = 128.0;
    pub const SYMBOL_CHARSET: f64 = 2.0;
    pub const THAI_CHARSET: f64 = 222.0;
    pub const TURKISH_CHARSET: f64 = 162.0;
    pub const VIETNAMESE_CHARSET: f64 = 163.0;
    pub const ALL: f64 = -3.0;
    pub const BM_ADD: f64 = 1.0;
    pub const BM_DEST_ALPHA: f64 = 7.0;
    pub const BM_DEST_COLOR: f64 = 9.0;
    pub const BM_INV_DEST_ALPHA: f64 = 8.0;
    pub const BM_INV_DEST_COLOR: f64 = 10.0;
    pub const BM_INV_SRC_ALPHA: f64 = 6.0;
    pub const BM_INV_SRC_COLOR: f64 = 4.0;
    pub const BM_MAX: f64 = 2.0;
    pub const BM_NORMAL: f64 = 0.0;
    pub const BM_ONE: f64 = 2.0;
    pub const BM_SRC_ALPHA: f64 = 5.0;
    pub const BM_SRC_ALPHA_SAT: f64 = 11.0;
    pub const BM_SRC_COLOR: f64 = 3.0;
    pub const BM_SUBTRACT: f64 = 3.0;
    pub const BM_ZERO: f64 = 1.0;
    pub const BROWSER_CHROME: f64 = 3.0;
    pub const BROWSER_FIREFOX: f64 = 2.0;
    pub const BROWSER_IE: f64 = 1.0;
    pub const BROWSER_NOT_A_BROWSER: f64 = -1.0;
    pub const BROWSER_OPERA: f64 = 6.0;
    pub const BROWSER_SAFARI: f64 = 4.0;
    pub const BROWSER_SAFARI_MOBILE: f64 = 5.0;
    pub const BROWSER_UNKNOWN: f64 = 0.0;
    pub const BUTTON_TYPE: f64 = 1.0;
    pub const C_AQUA: f64 = 16776960.0;
    pub const C_BLACK: f64 = 0.0;
    pub const C_BLUE: f64 = 16711680.0;
    pub const C_DKGRAY: f64 = 4210752.0;
    pub const C_FUCHSIA: f64 = 16711935.0;
    pub const C_GRAY: f64 = 8421504.0;
    pub const C_GREEN: f64 = 32768.0;
    pub const C_LIME: f64 = 65280.0;
    pub const C_LTGRAY: f64 = 12632256.0;
    pub const C_MAROON: f64 = 128.0;
    pub const C_NAVY: f64 = 8388608.0;
    pub const C_OLIVE: f64 = 32896.0;
    pub const C_ORANGE: f64 = 4235519.0;
    pub const C_PURPLE: f64 = 8388736.0;
    pub const C_RED: f64 = 255.0;
    pub const C_SILVER: f64 = 12632256.0;
    pub const C_TEAL: f64 = 8421376.0;
    pub const C_WHITE: f64 = 16777215.0;
    pub const C_YELLOW: f64 = 65535.0;
    pub const CR_APPSTART: f64 = -19.0;
    pub const CR_ARROW: f64 = -2.0;
    pub const CR_BEAM: f64 = -4.0;
    pub const CR_CROSS: f64 = -3.0;
    pub const CR_DEFAULT: f64 = 0.0;
    pub const CR_DRAG: f64 = -12.0;
    pub const CR_HANDPOINT: f64 = -21.0;
    pub const CR_HELP: f64 = -20.0;
    pub const CR_HOURGLASS: f64 = -11.0;
    pub const CR_HSPLIT: f64 = -14.0;
    pub const CR_MULTIDRAG: f64 = -16.0;
    pub const CR_NO: f64 = -18.0;
    pub const CR_NODROP: f64 = -13.0;
    pub const CR_NONE: f64 = -1.0;
    pub const CR_SIZE_ALL: f64 = -22.0;
    pub const CR_SIZE_NESW: f64 = -6.0;
    pub const CR_SIZE_NS: f64 = -7.0;
    pub const CR_SIZE_NWSE: f64 = -8.0;
    pub const CR_SIZE_WE: f64 = -9.0;
    pub const CR_SQLWAIT: f64 = -17.0;
    pub const CR_UPARROW: f64 = -10.0;
    pub const CR_VSPLIT: f64 = -15.0;
    pub const DEVICE_IOS_IPAD: f64 = 2.0;
    pub const DEVICE_IOS_IPHONE: f64 = 0.0;
    pub const DEVICE_IOS_IPHONE_RETINA: f64 = 1.0;
    pub const DEVICE_IOS_UNKNOWN: f64 = -1.0;
    pub const DLL_CDECL: f64 = 0.0;
    pub const DLL_STDCALL: f64 = 1.0;
    pub const EF_CLOUD: f64 = 9.0;
    pub const EF_ELLIPSE: f64 = 2.0;
    pub const EF_EXPLOSION: f64 = 0.0;
    pub const EF_FIREWORK: f64 = 3.0;
    pub const EF_FLARE: f64 = 8.0;
    pub const EF_RAIN: f64 = 10.0;
    pub const EF_RING: f64 = 1.0;
    pub const EF_SMOKE: f64 = 4.0;
    pub const EF_SMOKEUP: f64 = 5.0;
    pub const EF_SNOW: f64 = 11.0;
    pub const EF_SPARK: f64 = 7.0;
    pub const EF_STAR: f64 = 6.0;
    pub const EV_ALARM: f64 = 2.0;
    pub const EV_ANIMATION_END: f64 = 7.0;
    pub const EV_BOUNDARY: f64 = 1.0;
    pub const EV_CLOSE_BUTTON: f64 = 30.0;
    pub const EV_COLLISION: f64 = 4.0;
    pub const EV_CREATE: f64 = 0.0;
    pub const EV_DESTROY: f64 = 1.0;
    pub const EV_DRAW: f64 = 8.0;
    pub const EV_END_OF_PATH: f64 = 8.0;
    pub const EV_GAME_END: f64 = 3.0;
    pub const EV_GAME_START: f64 = 2.0;
    pub const EV_GLOBAL_LEFT_BUTTON: f64 = 50.0;
    pub const EV_GLOBAL_LEFT_PRESS: f64 = 53.0;
    pub const EV_GLOBAL_LEFT_RELEASE: f64 = 56.0;
    pub const EV_GLOBAL_MIDDLE_BUTTON: f64 = 52.0;
    pub const EV_GLOBAL_MIDDLE_PRESS: f64 = 55.0;
    pub const EV_GLOBAL_MIDDLE_RELEASE: f64 = 58.0;
    pub const EV_GLOBAL_PRESS: f64 = 12.0;
    pub const EV_GLOBAL_RELEASE: f64 = 13.0;
    pub const EV_GLOBAL_RIGHT_BUTTON: f64 = 51.0;
    pub const EV_GLOBAL_RIGHT_PRESS: f64 = 54.0;
    pub const EV_GLOBAL_RIGHT_RELEASE: f64 = 57.0;
    pub const EV_JOYSTICK1_BUTTON1: f64 = 21.0;
    pub const EV_JOYSTICK1_BUTTON2: f64 = 22.0;
    pub const EV_JOYSTICK1_BUTTON3: f64 = 23.0;
    pub const EV_JOYSTICK1_BUTTON4: f64 = 24.0;
    pub const EV_JOYSTICK1_BUTTON5: f64 = 25.0;
    pub const EV_JOYSTICK1_BUTTON6: f64 = 26.0;
    pub const EV_JOYSTICK1_BUTTON7: f64 = 27.0;
    pub const EV_JOYSTICK1_BUTTON8: f64 = 28.0;
    pub const EV_JOYSTICK1_DOWN: f64 = 19.0;
    pub const EV_JOYSTICK1_LEFT: f64 = 16.0;
    pub const EV_JOYSTICK1_RIGHT: f64 = 17.0;
    pub const EV_JOYSTICK1_UP: f64 = 18.0;
    pub const EV_JOYSTICK2_BUTTON1: f64 = 36.0;
    pub const EV_JOYSTICK2_BUTTON2: f64 = 37.0;
    pub const EV_JOYSTICK2_BUTTON3: f64 = 38.0;
    pub const EV_JOYSTICK2_BUTTON4: f64 = 39.0;
    pub const EV_JOYSTICK2_BUTTON5: f64 = 40.0;
    pub const EV_JOYSTICK2_BUTTON6: f64 = 41.0;
    pub const EV_JOYSTICK2_BUTTON7: f64 = 42.0;
    pub const EV_JOYSTICK2_BUTTON8: f64 = 43.0;
    pub const EV_JOYSTICK2_DOWN: f64 = 34.0;
    pub const EV_JOYSTICK2_LEFT: f64 = 31.0;
    pub const EV_JOYSTICK2_RIGHT: f64 = 32.0;
    pub const EV_JOYSTICK2_UP: f64 = 33.0;
    pub const EV_KEYBOARD: f64 = 5.0;
    pub const EV_KEYPRESS: f64 = 9.0;
    pub const EV_KEYRELEASE: f64 = 10.0;
    pub const EV_LEFT_BUTTON: f64 = 0.0;
    pub const EV_LEFT_PRESS: f64 = 4.0;
    pub const EV_LEFT_RELEASE: f64 = 7.0;
    pub const EV_MIDDLE_BUTTON: f64 = 2.0;
    pub const EV_MIDDLE_PRESS: f64 = 6.0;
    pub const EV_MIDDLE_RELEASE: f64 = 9.0;
    pub const EV_MOUSE: f64 = 6.0;
    pub const EV_MOUSE_ENTER: f64 = 10.0;
    pub const EV_MOUSE_LEAVE: f64 = 11.0;
    pub const EV_MOUSE_WHEEL_DOWN: f64 = 61.0;
    pub const EV_MOUSE_WHEEL_UP: f64 = 60.0;
    pub const EV_NO_BUTTON: f64 = 3.0;
    pub const EV_NO_MORE_HEALTH: f64 = 9.0;
    pub const EV_NO_MORE_LIVES: f64 = 6.0;
    pub const EV_OTHER: f64 = 7.0;
    pub const EV_OUTSIDE: f64 = 0.0;
    pub const EV_RIGHT_BUTTON: f64 = 1.0;
    pub const EV_RIGHT_PRESS: f64 = 5.0;
    pub const EV_RIGHT_RELEASE: f64 = 8.0;
    pub const EV_ROOM_END: f64 = 5.0;
    pub const EV_ROOM_START: f64 = 4.0;
    pub const EV_STEP: f64 = 3.0;
    pub const EV_STEP_BEGIN: f64 = 1.0;
    pub const EV_STEP_END: f64 = 2.0;
    pub const EV_STEP_NORMAL: f64 = 0.0;
    pub const EV_TRIGGER: f64 = 11.0;
    pub const EV_USER0: f64 = 10.0;
    pub const EV_USER1: f64 = 11.0;
    pub const EV_USER10: f64 = 20.0;
    pub const EV_USER11: f64 = 21.0;
    pub const EV_USER12: f64 = 22.0;
    pub const EV_USER13: f64 = 23.0;
    pub const EV_USER14: f64 = 24.0;
    pub const EV_USER15: f64 = 25.0;
    pub const EV_USER2: f64 = 12.0;
    pub const EV_USER3: f64 = 13.0;
    pub const EV_USER4: f64 = 14.0;
    pub const EV_USER5: f64 = 15.0;
    pub const EV_USER6: f64 = 16.0;
    pub const EV_USER7: f64 = 17.0;
    pub const EV_USER8: f64 = 18.0;
    pub const EV_USER9: f64 = 19.0;
    pub const FA_ARCHIVE: f64 = 32.0;
    pub const FA_BOTTOM: f64 = 2.0;
    pub const FA_CENTER: f64 = 1.0;
    pub const FA_DIRECTORY: f64 = 16.0;
    pub const FA_HIDDEN: f64 = 2.0;
    pub const FA_LEFT: f64 = 0.0;
    pub const FA_MIDDLE: f64 = 1.0;
    pub const FA_READONLY: f64 = 1.0;
    pub const FA_RIGHT: f64 = 2.0;
    pub const FA_SYSFILE: f64 = 4.0;
    pub const FA_TOP: f64 = 0.0;
    pub const FA_VOLUMEID: f64 = 8.0;
    pub const FALSE: f64 = 0.0;
    pub const GLOBAL: f64 = -5.0;
    pub const INPUT_TYPE: f64 = 2.0;
    pub const LOCAL: f64 = -7.0;
    pub const MB_ANY: f64 = -1.0;
    pub const MB_LEFT: f64 = 1.0;
    pub const MB_MIDDLE: f64 = 3.0;
    pub const MB_NONE: f64 = 0.0;
    pub const MB_RIGHT: f64 = 2.0;
    pub const NOONE: f64 = -4.0;
    pub const OS_ANDROID: f64 = 5.0;
    pub const OS_IOS: f64 = 4.0;
    pub const OS_LINUX: f64 = 6.0;
    pub const OS_MACOSX: f64 = 2.0;
    pub const OS_PSP: f64 = 3.0;
    pub const OS_UNKNOWN: f64 = -1.0;
    pub const OS_WIN32: f64 = 0.0;
    pub const OS_WIN64: f64 = 1.0;
    pub const OTHER: f64 = -2.0;
    pub const PI: f64 = unsafe {
        // 3.141592653589793, but we use the exact bytes from GM8 to avoid any compiler-mangling
        std::mem::transmute(u64::from_le_bytes([0x18, 0x2D, 0x44, 0x54, 0xFB, 0x21, 0x09, 0x40]))
    };
    pub const PR_LINELIST: f64 = 2.0;
    pub const PR_LINESTRIP: f64 = 3.0;
    pub const PR_POINTLIST: f64 = 1.0;
    pub const PR_TRIANGLEFAN: f64 = 6.0;
    pub const PR_TRIANGLELIST: f64 = 4.0;
    pub const PR_TRIANGLESTRIP: f64 = 5.0;
    pub const PS_CHANGE_ALL: f64 = 0.0;
    pub const PS_CHANGE_MOTION: f64 = 2.0;
    pub const PS_CHANGE_SHAPE: f64 = 1.0;
    pub const PS_DEFLECT_HORIZONTAL: f64 = 1.0;
    pub const PS_DEFLECT_VERTICAL: f64 = 0.0;
    pub const PS_DISTR_GAUSSIAN: f64 = 1.0;
    pub const PS_DISTR_INVGAUSSIAN: f64 = 2.0;
    pub const PS_DISTR_LINEAR: f64 = 0.0;
    pub const PS_FORCE_CONSTANT: f64 = 0.0;
    pub const PS_FORCE_LINEAR: f64 = 1.0;
    pub const PS_FORCE_QUADRATIC: f64 = 2.0;
    pub const PS_SHAPE_DIAMOND: f64 = 2.0;
    pub const PS_SHAPE_ELLIPSE: f64 = 1.0;
    pub const PS_SHAPE_LINE: f64 = 3.0;
    pub const PS_SHAPE_RECTANGLE: f64 = 0.0;
    pub const PT_SHAPE_CIRCLE: f64 = 5.0;
    pub const PT_SHAPE_CLOUD: f64 = 11.0;
    pub const PT_SHAPE_DISK: f64 = 1.0;
    pub const PT_SHAPE_EXPLOSION: f64 = 10.0;
    pub const PT_SHAPE_FLARE: f64 = 8.0;
    pub const PT_SHAPE_LINE: f64 = 3.0;
    pub const PT_SHAPE_PIXEL: f64 = 0.0;
    pub const PT_SHAPE_RING: f64 = 6.0;
    pub const PT_SHAPE_SMOKE: f64 = 12.0;
    pub const PT_SHAPE_SNOW: f64 = 13.0;
    pub const PT_SHAPE_SPARK: f64 = 9.0;
    pub const PT_SHAPE_SPHERE: f64 = 7.0;
    pub const PT_SHAPE_SQUARE: f64 = 2.0;
    pub const PT_SHAPE_STAR: f64 = 4.0;
    pub const SE_CHORUS: f64 = 1.0;
    pub const SE_COMPRESSOR: f64 = 32.0;
    pub const SE_ECHO: f64 = 2.0;
    pub const SE_EQUALIZER: f64 = 64.0;
    pub const SE_FLANGER: f64 = 4.0;
    pub const SE_GARGLE: f64 = 8.0;
    pub const SE_NONE: f64 = 0.0;
    pub const SE_REVERB: f64 = 16.0;
    pub const SELF: f64 = -1.0;
    pub const TEXT_TYPE: f64 = 0.0;
    pub const TRUE: f64 = 1.0;
    pub const TY_REAL: f64 = 0.0;
    pub const TY_STRING: f64 = 1.0;
    pub const VK_ADD: f64 = 107.0;
    pub const VK_ALT: f64 = 18.0;
    pub const VK_ANYKEY: f64 = 1.0;
    pub const VK_BACKSPACE: f64 = 8.0;
    pub const VK_CONTROL: f64 = 17.0;
    pub const VK_DECIMAL: f64 = 110.0;
    pub const VK_DELETE: f64 = 46.0;
    pub const VK_DIVIDE: f64 = 111.0;
    pub const VK_DOWN: f64 = 40.0;
    pub const VK_END: f64 = 35.0;
    pub const VK_ENTER: f64 = 13.0;
    pub const VK_ESCAPE: f64 = 27.0;
    pub const VK_F1: f64 = 112.0;
    pub const VK_F10: f64 = 121.0;
    pub const VK_F11: f64 = 122.0;
    pub const VK_F12: f64 = 123.0;
    pub const VK_F2: f64 = 113.0;
    pub const VK_F3: f64 = 114.0;
    pub const VK_F4: f64 = 115.0;
    pub const VK_F5: f64 = 116.0;
    pub const VK_F6: f64 = 117.0;
    pub const VK_F7: f64 = 118.0;
    pub const VK_F8: f64 = 119.0;
    pub const VK_F9: f64 = 120.0;
    pub const VK_HOME: f64 = 36.0;
    pub const VK_INSERT: f64 = 45.0;
    pub const VK_LALT: f64 = 164.0;
    pub const VK_LCONTROL: f64 = 162.0;
    pub const VK_LEFT: f64 = 37.0;
    pub const VK_LSHIFT: f64 = 160.0;
    pub const VK_MULTIPLY: f64 = 106.0;
    pub const VK_NOKEY: f64 = 0.0;
    pub const VK_NUMPAD0: f64 = 96.0;
    pub const VK_NUMPAD1: f64 = 97.0;
    pub const VK_NUMPAD2: f64 = 98.0;
    pub const VK_NUMPAD3: f64 = 99.0;
    pub const VK_NUMPAD4: f64 = 100.0;
    pub const VK_NUMPAD5: f64 = 101.0;
    pub const VK_NUMPAD6: f64 = 102.0;
    pub const VK_NUMPAD7: f64 = 103.0;
    pub const VK_NUMPAD8: f64 = 104.0;
    pub const VK_NUMPAD9: f64 = 105.0;
    pub const VK_PAGEDOWN: f64 = 34.0;
    pub const VK_PAGEUP: f64 = 33.0;
    pub const VK_PAUSE: f64 = 19.0;
    pub const VK_PRINTSCREEN: f64 = 44.0;
    pub const VK_RALT: f64 = 165.0;
    pub const VK_RCONTROL: f64 = 163.0;
    pub const VK_RETURN: f64 = 13.0;
    pub const VK_RIGHT: f64 = 39.0;
    pub const VK_RSHIFT: f64 = 161.0;
    pub const VK_SHIFT: f64 = 16.0;
    pub const VK_SPACE: f64 = 32.0;
    pub const VK_SUBTRACT: f64 = 109.0;
    pub const VK_TAB: f64 = 9.0;
    pub const VK_UP: f64 = 38.0;
}

/// Standard numerical constants for GML
pub const CONSTANTS: phf::Map<&'static str, f64> = phf_map! {
    "ANSI_CHARSET" => constants::ANSI_CHARSET,
    "ARABIC_CHARSET" => constants::ARABIC_CHARSET,
    "BALTIC_CHARSET" => constants::BALTIC_CHARSET,
    "CHINESEBIG5_CHARSET" => constants::CHINESEBIG5_CHARSET,
    "DEFAULT_CHARSET" => constants::DEFAULT_CHARSET,
    "EASTEUROPE_CHARSET" => constants::EASTEUROPE_CHARSET,
    "GB2312_CHARSET" => constants::GB2312_CHARSET,
    "GREEK_CHARSET" => constants::GREEK_CHARSET,
    "HANGEUL_CHARSET" => constants::HANGEUL_CHARSET,
    "HEBREW_CHARSET" => constants::HEBREW_CHARSET,
    "JOHAB_CHARSET" => constants::JOHAB_CHARSET,
    "MAC_CHARSET" => constants::MAC_CHARSET,
    "OEM_CHARSET" => constants::OEM_CHARSET,
    "RUSSIAN_CHARSET" => constants::RUSSIAN_CHARSET,
    "SHIFTJIS_CHARSET" => constants::SHIFTJIS_CHARSET,
    "SYMBOL_CHARSET" => constants::SYMBOL_CHARSET,
    "THAI_CHARSET" => constants::THAI_CHARSET,
    "TURKISH_CHARSET" => constants::TURKISH_CHARSET,
    "VIETNAMESE_CHARSET" => constants::VIETNAMESE_CHARSET,
    "all" => constants::ALL,
    "bm_add" => constants::BM_ADD,
    "bm_dest_alpha" => constants::BM_DEST_ALPHA,
    "bm_dest_color" => constants::BM_DEST_COLOR,
    "bm_inv_dest_alpha" => constants::BM_INV_DEST_ALPHA,
    "bm_inv_dest_color" => constants::BM_INV_DEST_COLOR,
    "bm_inv_src_alpha" => constants::BM_INV_SRC_ALPHA,
    "bm_inv_src_color" => constants::BM_INV_SRC_COLOR,
    "bm_max" => constants::BM_MAX,
    "bm_normal" => constants::BM_NORMAL,
    "bm_one" => constants::BM_ONE,
    "bm_src_alpha" => constants::BM_SRC_ALPHA,
    "bm_src_alpha_sat" => constants::BM_SRC_ALPHA_SAT,
    "bm_src_color" => constants::BM_SRC_COLOR,
    "bm_subtract" => constants::BM_SUBTRACT,
    "bm_zero" => constants::BM_ZERO,
    "browser_chrome" => constants::BROWSER_CHROME,
    "browser_firefox" => constants::BROWSER_FIREFOX,
    "browser_ie" => constants::BROWSER_IE,
    "browser_not_a_browser" => constants::BROWSER_NOT_A_BROWSER,
    "browser_opera" => constants::BROWSER_OPERA,
    "browser_safari" => constants::BROWSER_SAFARI,
    "browser_safari_mobile" => constants::BROWSER_SAFARI_MOBILE,
    "browser_unknown" => constants::BROWSER_UNKNOWN,
    "button_type" => constants::BUTTON_TYPE,
    "c_aqua" => constants::C_AQUA,
    "c_black" => constants::C_BLACK,
    "c_blue" => constants::C_BLUE,
    "c_dkgray" => constants::C_DKGRAY,
    "c_fuchsia" => constants::C_FUCHSIA,
    "c_gray" => constants::C_GRAY,
    "c_green" => constants::C_GREEN,
    "c_lime" => constants::C_LIME,
    "c_ltgray" => constants::C_LTGRAY,
    "c_maroon" => constants::C_MAROON,
    "c_navy" => constants::C_NAVY,
    "c_olive" => constants::C_OLIVE,
    "c_orange" => constants::C_ORANGE,
    "c_purple" => constants::C_PURPLE,
    "c_red" => constants::C_RED,
    "c_silver" => constants::C_SILVER,
    "c_teal" => constants::C_TEAL,
    "c_white" => constants::C_WHITE,
    "c_yellow" => constants::C_YELLOW,
    "cr_appstart" => constants::CR_APPSTART,
    "cr_arrow" => constants::CR_ARROW,
    "cr_arrrow" => constants::CR_ARROW, // a mistake from GM 5.0
    "cr_beam" => constants::CR_BEAM,
    "cr_cross" => constants::CR_CROSS,
    "cr_default" => constants::CR_DEFAULT,
    "cr_drag" => constants::CR_DRAG,
    "cr_handpoint" => constants::CR_HANDPOINT,
    "cr_help" => constants::CR_HELP,
    "cr_hourglass" => constants::CR_HOURGLASS,
    "cr_hsplit" => constants::CR_HSPLIT,
    "cr_multidrag" => constants::CR_MULTIDRAG,
    "cr_no" => constants::CR_NO,
    "cr_nodrop" => constants::CR_NODROP,
    "cr_none" => constants::CR_NONE,
    "cr_size_all" => constants::CR_SIZE_ALL,
    "cr_size_nesw" => constants::CR_SIZE_NESW,
    "cr_size_ns" => constants::CR_SIZE_NS,
    "cr_size_nwse" => constants::CR_SIZE_NWSE,
    "cr_size_we" => constants::CR_SIZE_WE,
    "cr_sqlwait" => constants::CR_SQLWAIT,
    "cr_uparrow" => constants::CR_UPARROW,
    "cr_vsplit" => constants::CR_VSPLIT,
    "device_ios_ipad" => constants::DEVICE_IOS_IPAD,
    "device_ios_iphone" => constants::DEVICE_IOS_IPHONE,
    "device_ios_iphone_retina" => constants::DEVICE_IOS_IPHONE_RETINA,
    "device_ios_unknown" => constants::DEVICE_IOS_UNKNOWN,
    "dll_cdecl" => constants::DLL_CDECL,
    "dll_stdcall" => constants::DLL_STDCALL,
    "ef_cloud" => constants::EF_CLOUD,
    "ef_ellipse" => constants::EF_ELLIPSE,
    "ef_explosion" => constants::EF_EXPLOSION,
    "ef_firework" => constants::EF_FIREWORK,
    "ef_flare" => constants::EF_FLARE,
    "ef_rain" => constants::EF_RAIN,
    "ef_ring" => constants::EF_RING,
    "ef_smoke" => constants::EF_SMOKE,
    "ef_smokeup" => constants::EF_SMOKEUP,
    "ef_snow" => constants::EF_SNOW,
    "ef_spark" => constants::EF_SPARK,
    "ef_star" => constants::EF_STAR,
    "ev_alarm" => constants::EV_ALARM,
    "ev_animation_end" => constants::EV_ANIMATION_END,
    "ev_boundary" => constants::EV_BOUNDARY,
    "ev_close_button" => constants::EV_CLOSE_BUTTON,
    "ev_collision" => constants::EV_COLLISION,
    "ev_create" => constants::EV_CREATE,
    "ev_destroy" => constants::EV_DESTROY,
    "ev_draw" => constants::EV_DRAW,
    "ev_end_of_path" => constants::EV_END_OF_PATH,
    "ev_game_end" => constants::EV_GAME_END,
    "ev_game_start" => constants::EV_GAME_START,
    "ev_global_left_button" => constants::EV_GLOBAL_LEFT_BUTTON,
    "ev_global_left_press" => constants::EV_GLOBAL_LEFT_PRESS,
    "ev_global_left_release" => constants::EV_GLOBAL_LEFT_RELEASE,
    "ev_global_middle_button" => constants::EV_GLOBAL_MIDDLE_BUTTON,
    "ev_global_middle_press" => constants::EV_GLOBAL_MIDDLE_PRESS,
    "ev_global_middle_release" => constants::EV_GLOBAL_MIDDLE_RELEASE,
    "ev_global_press" => constants::EV_GLOBAL_PRESS,
    "ev_global_release" => constants::EV_GLOBAL_RELEASE,
    "ev_global_right_button" => constants::EV_GLOBAL_RIGHT_BUTTON,
    "ev_global_right_press" => constants::EV_GLOBAL_RIGHT_PRESS,
    "ev_global_right_release" => constants::EV_GLOBAL_RIGHT_RELEASE,
    "ev_joystick1_button1" => constants::EV_JOYSTICK1_BUTTON1,
    "ev_joystick1_button2" => constants::EV_JOYSTICK1_BUTTON2,
    "ev_joystick1_button3" => constants::EV_JOYSTICK1_BUTTON3,
    "ev_joystick1_button4" => constants::EV_JOYSTICK1_BUTTON4,
    "ev_joystick1_button5" => constants::EV_JOYSTICK1_BUTTON5,
    "ev_joystick1_button6" => constants::EV_JOYSTICK1_BUTTON6,
    "ev_joystick1_button7" => constants::EV_JOYSTICK1_BUTTON7,
    "ev_joystick1_button8" => constants::EV_JOYSTICK1_BUTTON8,
    "ev_joystick1_down" => constants::EV_JOYSTICK1_DOWN,
    "ev_joystick1_left" => constants::EV_JOYSTICK1_LEFT,
    "ev_joystick1_right" => constants::EV_JOYSTICK1_RIGHT,
    "ev_joystick1_up" => constants::EV_JOYSTICK1_UP,
    "ev_joystick2_button1" => constants::EV_JOYSTICK2_BUTTON1,
    "ev_joystick2_button2" => constants::EV_JOYSTICK2_BUTTON2,
    "ev_joystick2_button3" => constants::EV_JOYSTICK2_BUTTON3,
    "ev_joystick2_button4" => constants::EV_JOYSTICK2_BUTTON4,
    "ev_joystick2_button5" => constants::EV_JOYSTICK2_BUTTON5,
    "ev_joystick2_button6" => constants::EV_JOYSTICK2_BUTTON6,
    "ev_joystick2_button7" => constants::EV_JOYSTICK2_BUTTON7,
    "ev_joystick2_button8" => constants::EV_JOYSTICK2_BUTTON8,
    "ev_joystick2_down" => constants::EV_JOYSTICK2_DOWN,
    "ev_joystick2_left" => constants::EV_JOYSTICK2_LEFT,
    "ev_joystick2_right" => constants::EV_JOYSTICK2_RIGHT,
    "ev_joystick2_up" => constants::EV_JOYSTICK2_UP,
    "ev_keyboard" => constants::EV_KEYBOARD,
    "ev_keypress" => constants::EV_KEYPRESS,
    "ev_keyrelease" => constants::EV_KEYRELEASE,
    "ev_left_button" => constants::EV_LEFT_BUTTON,
    "ev_left_press" => constants::EV_LEFT_PRESS,
    "ev_left_release" => constants::EV_LEFT_RELEASE,
    "ev_middle_button" => constants::EV_MIDDLE_BUTTON,
    "ev_middle_press" => constants::EV_MIDDLE_PRESS,
    "ev_middle_release" => constants::EV_MIDDLE_RELEASE,
    "ev_mouse" => constants::EV_MOUSE,
    "ev_mouse_enter" => constants::EV_MOUSE_ENTER,
    "ev_mouse_leave" => constants::EV_MOUSE_LEAVE,
    "ev_mouse_wheel_down" => constants::EV_MOUSE_WHEEL_DOWN,
    "ev_mouse_wheel_up" => constants::EV_MOUSE_WHEEL_UP,
    "ev_no_button" => constants::EV_NO_BUTTON,
    "ev_no_more_health" => constants::EV_NO_MORE_HEALTH,
    "ev_no_more_lives" => constants::EV_NO_MORE_LIVES,
    "ev_other" => constants::EV_OTHER,
    "ev_outside" => constants::EV_OUTSIDE,
    "ev_right_button" => constants::EV_RIGHT_BUTTON,
    "ev_right_press" => constants::EV_RIGHT_PRESS,
    "ev_right_release" => constants::EV_RIGHT_RELEASE,
    "ev_room_end" => constants::EV_ROOM_END,
    "ev_room_start" => constants::EV_ROOM_START,
    "ev_step" => constants::EV_STEP,
    "ev_step_begin" => constants::EV_STEP_BEGIN,
    "ev_step_end" => constants::EV_STEP_END,
    "ev_step_normal" => constants::EV_STEP_NORMAL,
    "ev_trigger" => constants::EV_TRIGGER,
    "ev_user0" => constants::EV_USER0,
    "ev_user1" => constants::EV_USER1,
    "ev_user10" => constants::EV_USER10,
    "ev_user11" => constants::EV_USER11,
    "ev_user12" => constants::EV_USER12,
    "ev_user13" => constants::EV_USER13,
    "ev_user14" => constants::EV_USER14,
    "ev_user15" => constants::EV_USER15,
    "ev_user2" => constants::EV_USER2,
    "ev_user3" => constants::EV_USER3,
    "ev_user4" => constants::EV_USER4,
    "ev_user5" => constants::EV_USER5,
    "ev_user6" => constants::EV_USER6,
    "ev_user7" => constants::EV_USER7,
    "ev_user8" => constants::EV_USER8,
    "ev_user9" => constants::EV_USER9,
    "fa_archive" => constants::FA_ARCHIVE,
    "fa_bottom" => constants::FA_BOTTOM,
    "fa_center" => constants::FA_CENTER,
    "fa_directory" => constants::FA_DIRECTORY,
    "fa_hidden" => constants::FA_HIDDEN,
    "fa_left" => constants::FA_LEFT,
    "fa_middle" => constants::FA_MIDDLE,
    "fa_readonly" => constants::FA_READONLY,
    "fa_right" => constants::FA_RIGHT,
    "fa_sysfile" => constants::FA_SYSFILE,
    "fa_top" => constants::FA_TOP,
    "fa_volumeid" => constants::FA_VOLUMEID,
    "false" => constants::FALSE,
    "global" => constants::GLOBAL,
    "input_type" => constants::INPUT_TYPE,
    "local" => constants::LOCAL,
    "mb_any" => constants::MB_ANY,
    "mb_left" => constants::MB_LEFT,
    "mb_middle" => constants::MB_MIDDLE,
    "mb_none" => constants::MB_NONE,
    "mb_right" => constants::MB_RIGHT,
    "noone" => constants::NOONE,
    "os_android" => constants::OS_ANDROID,
    "os_ios" => constants::OS_IOS,
    "os_linux" => constants::OS_LINUX,
    "os_macosx" => constants::OS_MACOSX,
    "os_psp" => constants::OS_PSP,
    "os_unknown" => constants::OS_UNKNOWN,
    "os_win32" => constants::OS_WIN32,
    "os_win64" => constants::OS_WIN64,
    "other" => constants::OTHER,
    "pi" => constants::PI,
    "pr_linelist" => constants::PR_LINELIST,
    "pr_linestrip" => constants::PR_LINESTRIP,
    "pr_pointlist" => constants::PR_POINTLIST,
    "pr_trianglefan" => constants::PR_TRIANGLEFAN,
    "pr_trianglelist" => constants::PR_TRIANGLELIST,
    "pr_trianglestrip" => constants::PR_TRIANGLESTRIP,
    "ps_change_all" => constants::PS_CHANGE_ALL,
    "ps_change_motion" => constants::PS_CHANGE_MOTION,
    "ps_change_shape" => constants::PS_CHANGE_SHAPE,
    "ps_deflect_horizontal" => constants::PS_DEFLECT_HORIZONTAL,
    "ps_deflect_vertical" => constants::PS_DEFLECT_VERTICAL,
    "ps_distr_gaussian" => constants::PS_DISTR_GAUSSIAN,
    "ps_distr_invgaussian" => constants::PS_DISTR_INVGAUSSIAN,
    "ps_distr_linear" => constants::PS_DISTR_LINEAR,
    "ps_force_constant" => constants::PS_FORCE_CONSTANT,
    "ps_force_linear" => constants::PS_FORCE_LINEAR,
    "ps_force_quadratic" => constants::PS_FORCE_QUADRATIC,
    "ps_shape_diamond" => constants::PS_SHAPE_DIAMOND,
    "ps_shape_ellipse" => constants::PS_SHAPE_ELLIPSE,
    "ps_shape_line" => constants::PS_SHAPE_LINE,
    "ps_shape_rectangle" => constants::PS_SHAPE_RECTANGLE,
    "pt_shape_circle" => constants::PT_SHAPE_CIRCLE,
    "pt_shape_cloud" => constants::PT_SHAPE_CLOUD,
    "pt_shape_disk" => constants::PT_SHAPE_DISK,
    "pt_shape_explosion" => constants::PT_SHAPE_EXPLOSION,
    "pt_shape_flare" => constants::PT_SHAPE_FLARE,
    "pt_shape_line" => constants::PT_SHAPE_LINE,
    "pt_shape_pixel" => constants::PT_SHAPE_PIXEL,
    "pt_shape_ring" => constants::PT_SHAPE_RING,
    "pt_shape_smoke" => constants::PT_SHAPE_SMOKE,
    "pt_shape_snow" => constants::PT_SHAPE_SNOW,
    "pt_shape_spark" => constants::PT_SHAPE_SPARK,
    "pt_shape_sphere" => constants::PT_SHAPE_SPHERE,
    "pt_shape_square" => constants::PT_SHAPE_SQUARE,
    "pt_shape_star" => constants::PT_SHAPE_STAR,
    "se_chorus" => constants::SE_CHORUS,
    "se_compressor" => constants::SE_COMPRESSOR,
    "se_echo" => constants::SE_ECHO,
    "se_equalizer" => constants::SE_EQUALIZER,
    "se_flanger" => constants::SE_FLANGER,
    "se_gargle" => constants::SE_GARGLE,
    "se_none" => constants::SE_NONE,
    "se_reverb" => constants::SE_REVERB,
    "self" => constants::SELF,
    "text_type" => constants::TEXT_TYPE,
    "true" => constants::TRUE,
    "ty_real" => constants::TY_REAL,
    "ty_string" => constants::TY_STRING,
    "vk_add" => constants::VK_ADD,
    "vk_alt" => constants::VK_ALT,
    "vk_anykey" => constants::VK_ANYKEY,
    "vk_backspace" => constants::VK_BACKSPACE,
    "vk_control" => constants::VK_CONTROL,
    "vk_decimal" => constants::VK_DECIMAL,
    "vk_delete" => constants::VK_DELETE,
    "vk_divide" => constants::VK_DIVIDE,
    "vk_down" => constants::VK_DOWN,
    "vk_end" => constants::VK_END,
    "vk_enter" => constants::VK_ENTER,
    "vk_escape" => constants::VK_ESCAPE,
    "vk_f1" => constants::VK_F1,
    "vk_f10" => constants::VK_F10,
    "vk_f11" => constants::VK_F11,
    "vk_f12" => constants::VK_F12,
    "vk_f2" => constants::VK_F2,
    "vk_f3" => constants::VK_F3,
    "vk_f4" => constants::VK_F4,
    "vk_f5" => constants::VK_F5,
    "vk_f6" => constants::VK_F6,
    "vk_f7" => constants::VK_F7,
    "vk_f8" => constants::VK_F8,
    "vk_f9" => constants::VK_F9,
    "vk_home" => constants::VK_HOME,
    "vk_insert" => constants::VK_INSERT,
    "vk_lalt" => constants::VK_LALT,
    "vk_lcontrol" => constants::VK_LCONTROL,
    "vk_left" => constants::VK_LEFT,
    "vk_lshift" => constants::VK_LSHIFT,
    "vk_multiply" => constants::VK_MULTIPLY,
    "vk_nokey" => constants::VK_NOKEY,
    "vk_numpad0" => constants::VK_NUMPAD0,
    "vk_numpad1" => constants::VK_NUMPAD1,
    "vk_numpad2" => constants::VK_NUMPAD2,
    "vk_numpad3" => constants::VK_NUMPAD3,
    "vk_numpad4" => constants::VK_NUMPAD4,
    "vk_numpad5" => constants::VK_NUMPAD5,
    "vk_numpad6" => constants::VK_NUMPAD6,
    "vk_numpad7" => constants::VK_NUMPAD7,
    "vk_numpad8" => constants::VK_NUMPAD8,
    "vk_numpad9" => constants::VK_NUMPAD9,
    "vk_pagedown" => constants::VK_PAGEDOWN,
    "vk_pageup" => constants::VK_PAGEUP,
    "vk_pause" => constants::VK_PAUSE,
    "vk_printscreen" => constants::VK_PRINTSCREEN,
    "vk_ralt" => constants::VK_RALT,
    "vk_rcontrol" => constants::VK_RCONTROL,
    "vk_return" => constants::VK_RETURN,
    "vk_right" => constants::VK_RIGHT,
    "vk_rshift" => constants::VK_RSHIFT,
    "vk_shift" => constants::VK_SHIFT,
    "vk_space" => constants::VK_SPACE,
    "vk_subtract" => constants::VK_SUBTRACT,
    "vk_tab" => constants::VK_TAB,
    "vk_up" => constants::VK_UP,
};

/// Mappings of instance variable names to their enum identifiers
pub const INSTANCE_VARIABLES: [(&str, InstanceVariable); 166] = [
    ("x", InstanceVariable::X),
    ("y", InstanceVariable::Y),
    ("xprevious", InstanceVariable::Xprevious),
    ("yprevious", InstanceVariable::Yprevious),
    ("xstart", InstanceVariable::Xstart),
    ("ystart", InstanceVariable::Ystart),
    ("hspeed", InstanceVariable::Hspeed),
    ("vspeed", InstanceVariable::Vspeed),
    ("direction", InstanceVariable::Direction),
    ("speed", InstanceVariable::Speed),
    ("friction", InstanceVariable::Friction),
    ("gravity", InstanceVariable::Gravity),
    ("gravity_direction", InstanceVariable::GravityDirection),
    ("object_index", InstanceVariable::ObjectIndex),
    ("id", InstanceVariable::Id),
    ("alarm", InstanceVariable::Alarm),
    ("solid", InstanceVariable::Solid),
    ("visible", InstanceVariable::Visible),
    ("persistent", InstanceVariable::Persistent),
    ("depth", InstanceVariable::Depth),
    ("bbox_left", InstanceVariable::BboxLeft),
    ("bbox_right", InstanceVariable::BboxRight),
    ("bbox_top", InstanceVariable::BboxTop),
    ("bbox_bottom", InstanceVariable::BboxBottom),
    ("sprite_index", InstanceVariable::SpriteIndex),
    ("image_index", InstanceVariable::ImageIndex),
    ("image_single", InstanceVariable::ImageSingle),
    ("image_number", InstanceVariable::ImageNumber),
    ("sprite_width", InstanceVariable::SpriteWidth),
    ("sprite_height", InstanceVariable::SpriteHeight),
    ("sprite_xoffset", InstanceVariable::SpriteXoffset),
    ("sprite_yoffset", InstanceVariable::SpriteYoffset),
    ("image_xscale", InstanceVariable::ImageXscale),
    ("image_yscale", InstanceVariable::ImageYscale),
    ("image_angle", InstanceVariable::ImageAngle),
    ("image_alpha", InstanceVariable::ImageAlpha),
    ("image_blend", InstanceVariable::ImageBlend),
    ("image_speed", InstanceVariable::ImageSpeed),
    ("mask_index", InstanceVariable::MaskIndex),
    ("path_index", InstanceVariable::PathIndex),
    ("path_position", InstanceVariable::PathPosition),
    ("path_positionprevious", InstanceVariable::PathPositionprevious),
    ("path_speed", InstanceVariable::PathSpeed),
    ("path_scale", InstanceVariable::PathScale),
    ("path_orientation", InstanceVariable::PathOrientation),
    ("path_endaction", InstanceVariable::PathEndAction),
    ("timeline_index", InstanceVariable::TimelineIndex),
    ("timeline_position", InstanceVariable::TimelinePosition),
    ("timeline_speed", InstanceVariable::TimelineSpeed),
    ("timeline_running", InstanceVariable::TimelineRunning),
    ("timeline_loop", InstanceVariable::TimelineLoop),
    ("argument_relative", InstanceVariable::ArgumentRelative),
    ("argument0", InstanceVariable::Argument0),
    ("argument1", InstanceVariable::Argument1),
    ("argument2", InstanceVariable::Argument2),
    ("argument3", InstanceVariable::Argument3),
    ("argument4", InstanceVariable::Argument4),
    ("argument5", InstanceVariable::Argument5),
    ("argument6", InstanceVariable::Argument6),
    ("argument7", InstanceVariable::Argument7),
    ("argument8", InstanceVariable::Argument8),
    ("argument9", InstanceVariable::Argument9),
    ("argument10", InstanceVariable::Argument10),
    ("argument11", InstanceVariable::Argument11),
    ("argument12", InstanceVariable::Argument12),
    ("argument13", InstanceVariable::Argument13),
    ("argument14", InstanceVariable::Argument14),
    ("argument15", InstanceVariable::Argument15),
    ("argument", InstanceVariable::Argument),
    ("argument_count", InstanceVariable::ArgumentCount),
    ("room", InstanceVariable::Room),
    ("room_first", InstanceVariable::RoomFirst),
    ("room_last", InstanceVariable::RoomLast),
    ("transition_kind", InstanceVariable::TransitionKind),
    ("transition_steps", InstanceVariable::TransitionSteps),
    ("score", InstanceVariable::Score),
    ("lives", InstanceVariable::Lives),
    ("health", InstanceVariable::Health),
    ("game_id", InstanceVariable::GameId),
    ("working_directory", InstanceVariable::WorkingDirectory),
    ("temp_directory", InstanceVariable::TempDirectory),
    ("program_directory", InstanceVariable::ProgramDirectory),
    ("instance_count", InstanceVariable::InstanceCount),
    ("instance_id", InstanceVariable::InstanceId),
    ("room_width", InstanceVariable::RoomWidth),
    ("room_height", InstanceVariable::RoomHeight),
    ("room_caption", InstanceVariable::RoomCaption),
    ("room_speed", InstanceVariable::RoomSpeed),
    ("room_persistent", InstanceVariable::RoomPersistent),
    ("background_color", InstanceVariable::BackgroundColor),
    ("background_showcolor", InstanceVariable::BackgroundShowcolor),
    ("background_visible", InstanceVariable::BackgroundVisible),
    ("background_foreground", InstanceVariable::BackgroundForeground),
    ("background_index", InstanceVariable::BackgroundIndex),
    ("background_x", InstanceVariable::BackgroundX),
    ("background_y", InstanceVariable::BackgroundY),
    ("background_width", InstanceVariable::BackgroundWidth),
    ("background_height", InstanceVariable::BackgroundHeight),
    ("background_htiled", InstanceVariable::BackgroundHtiled),
    ("background_vtiled", InstanceVariable::BackgroundVtiled),
    ("background_xscale", InstanceVariable::BackgroundXscale),
    ("background_yscale", InstanceVariable::BackgroundYscale),
    ("background_hspeed", InstanceVariable::BackgroundHspeed),
    ("background_vspeed", InstanceVariable::BackgroundVspeed),
    ("background_blend", InstanceVariable::BackgroundBlend),
    ("background_alpha", InstanceVariable::BackgroundAlpha),
    ("view_enabled", InstanceVariable::ViewEnabled),
    ("view_current", InstanceVariable::ViewCurrent),
    ("view_visible", InstanceVariable::ViewVisible),
    ("view_xview", InstanceVariable::ViewXview),
    ("view_yview", InstanceVariable::ViewYview),
    ("view_wview", InstanceVariable::ViewWview),
    ("view_hview", InstanceVariable::ViewHview),
    ("view_xport", InstanceVariable::ViewXport),
    ("view_yport", InstanceVariable::ViewYport),
    ("view_wport", InstanceVariable::ViewWport),
    ("view_hport", InstanceVariable::ViewHport),
    ("view_angle", InstanceVariable::ViewAngle),
    ("view_hborder", InstanceVariable::ViewHborder),
    ("view_vborder", InstanceVariable::ViewVborder),
    ("view_hspeed", InstanceVariable::ViewHspeed),
    ("view_vspeed", InstanceVariable::ViewVspeed),
    ("view_object", InstanceVariable::ViewObject),
    ("mouse_x", InstanceVariable::MouseX),
    ("mouse_y", InstanceVariable::MouseY),
    ("mouse_button", InstanceVariable::MouseButton),
    ("mouse_lastbutton", InstanceVariable::MouseLastbutton),
    ("keyboard_key", InstanceVariable::KeyboardKey),
    ("keyboard_lastkey", InstanceVariable::KeyboardLastkey),
    ("keyboard_lastchar", InstanceVariable::KeyboardLastchar),
    ("keyboard_string", InstanceVariable::KeyboardString),
    ("cursor_sprite", InstanceVariable::CursorSprite),
    ("show_score", InstanceVariable::ShowScore),
    ("show_lives", InstanceVariable::ShowLives),
    ("show_health", InstanceVariable::ShowHealth),
    ("caption_score", InstanceVariable::CaptionScore),
    ("caption_lives", InstanceVariable::CaptionLives),
    ("caption_health", InstanceVariable::CaptionHealth),
    ("fps", InstanceVariable::Fps),
    ("current_time", InstanceVariable::CurrentTime),
    ("current_year", InstanceVariable::CurrentYear),
    ("current_month", InstanceVariable::CurrentMonth),
    ("current_day", InstanceVariable::CurrentDay),
    ("current_weekday", InstanceVariable::CurrentWeekday),
    ("current_hour", InstanceVariable::CurrentHour),
    ("current_minute", InstanceVariable::CurrentMinute),
    ("current_second", InstanceVariable::CurrentSecond),
    ("event_type", InstanceVariable::EventType),
    ("event_number", InstanceVariable::EventNumber),
    ("event_object", InstanceVariable::EventObject),
    ("event_action", InstanceVariable::EventAction),
    ("secure_mode", InstanceVariable::SecureMode),
    ("debug_mode", InstanceVariable::DebugMode),
    ("error_occurred", InstanceVariable::ErrorOccurred),
    ("error_last", InstanceVariable::ErrorLast),
    ("gamemaker_registered", InstanceVariable::GamemakerStandard),
    ("gamemaker_pro", InstanceVariable::GamemakerStandard),
    ("gamemaker_version", InstanceVariable::GamemakerVersion),
    ("os_type", InstanceVariable::OsType),
    ("os_device", InstanceVariable::OsDevice),
    ("os_version", InstanceVariable::OsVersion),
    ("os_browser", InstanceVariable::OsBrowser),
    ("browser_width", InstanceVariable::BrowserWidth),
    ("browser_height", InstanceVariable::BrowserHeight),
    ("display_aa", InstanceVariable::DisplayAa),
    ("async_load", InstanceVariable::AsyncLoad),
];

pub fn get_instance_variable_by_name(name: &[u8]) -> Option<&InstanceVariable> {
    std::str::from_utf8(name).ok().and_then(|n| INSTANCE_VARIABLES.iter().find(|(s, _)| *s == n).map(|(_, v)| v))
}

/// Mappings of GM function names to callable pointers
pub const FUNCTIONS: phf::OrderedMap<&'static str, Function> = phf_ordered_map! {
    // TODO: Use the macro to automatically infer the dependence on runtime of kernel
    // functions from the mutability of 'Game' and/or 'Context' in their signatures.
    "display_get_width" => Function::Volatile(Game::display_get_width),
    "display_get_height" => Function::Volatile(Game::display_get_height),
    "display_get_colordepth" => Function::Volatile(Game::display_get_colordepth),
    "display_get_frequency" => Function::Volatile(Game::display_get_frequency),
    "display_set_size" => Function::Engine(Game::display_set_size),
    "display_set_colordepth" => Function::Engine(Game::display_set_colordepth),
    "display_set_frequency" => Function::Engine(Game::display_set_frequency),
    "display_set_all" => Function::Engine(Game::display_set_all),
    "display_test_all" => Function::Volatile(Game::display_test_all),
    "display_reset" => Function::Engine(Game::display_reset),
    "display_mouse_get_x" => Function::Volatile(Game::display_mouse_get_x),
    "display_mouse_get_y" => Function::Volatile(Game::display_mouse_get_y),
    "display_mouse_set" => Function::Engine(Game::display_mouse_set),
    "window_set_visible" => Function::Engine(Game::window_set_visible),
    "window_get_visible" => Function::Constant(Game::window_get_visible),
    "window_set_fullscreen" => Function::Engine(Game::window_set_fullscreen),
    "window_get_fullscreen" => Function::Constant(Game::window_get_fullscreen),
    "window_set_showborder" => Function::Engine(Game::window_set_showborder),
    "window_get_showborder" => Function::Constant(Game::window_get_showborder),
    "window_set_showicons" => Function::Engine(Game::window_set_showicons),
    "window_get_showicons" => Function::Constant(Game::window_get_showicons),
    "window_set_stayontop" => Function::Engine(Game::window_set_stayontop),
    "window_get_stayontop" => Function::Constant(Game::window_get_stayontop),
    "window_set_sizeable" => Function::Engine(Game::window_set_sizeable),
    "window_get_sizeable" => Function::Constant(Game::window_get_sizeable),
    "window_set_caption" => Function::Engine(Game::window_set_caption),
    "window_get_caption" => Function::Constant(Game::window_get_caption),
    "window_set_cursor" => Function::Engine(Game::window_set_cursor),
    "window_get_cursor" => Function::Constant(Game::window_get_cursor),
    "window_set_color" => Function::Engine(Game::window_set_color),
    "window_get_color" => Function::Constant(Game::window_get_color),
    "window_set_position" => Function::Engine(Game::window_set_position),
    "window_set_size" => Function::Engine(Game::window_set_size),
    "window_set_rectangle" => Function::Engine(Game::window_set_rectangle),
    "window_center" => Function::Engine(Game::window_center),
    "window_default" => Function::Engine(Game::window_default),
    "window_get_x" => Function::Volatile(Game::window_get_x),
    "window_get_y" => Function::Volatile(Game::window_get_y),
    "window_get_width" => Function::Volatile(Game::window_get_width),
    "window_get_height" => Function::Volatile(Game::window_get_height),
    "window_set_region_size" => Function::Engine(Game::window_set_region_size),
    "window_get_region_width" => Function::Constant(Game::window_get_region_width),
    "window_get_region_height" => Function::Constant(Game::window_get_region_height),
    "window_set_region_scale" => Function::Engine(Game::window_set_region_scale),
    "window_get_region_scale" => Function::Constant(Game::window_get_region_scale),
    "window_mouse_get_x" => Function::Volatile(Game::window_mouse_get_x),
    "window_mouse_get_y" => Function::Volatile(Game::window_mouse_get_y),
    "window_mouse_set" => Function::Engine(Game::window_mouse_set),
    "window_view_mouse_get_x" => Function::Volatile(Game::window_view_mouse_get_x),
    "window_view_mouse_get_y" => Function::Volatile(Game::window_view_mouse_get_y),
    "window_view_mouse_set" => Function::Engine(Game::window_view_mouse_set),
    "window_views_mouse_get_x" => Function::Volatile(Game::window_views_mouse_get_x),
    "window_views_mouse_get_y" => Function::Volatile(Game::window_views_mouse_get_y),
    "window_views_mouse_set" => Function::Engine(Game::window_views_mouse_set),
    "set_synchronization" => Function::Engine(Game::set_synchronization),
    "set_automatic_draw" => Function::Engine(Game::set_automatic_draw),
    "screen_redraw" => Function::Engine(Game::screen_redraw),
    "screen_refresh" => Function::Engine(Game::screen_refresh),
    "screen_wait_vsync" => Function::Volatile(Game::screen_wait_vsync),
    "screen_save" => Function::Engine(Game::screen_save),
    "screen_save_part" => Function::Engine(Game::screen_save_part),
    "draw_getpixel" => Function::Engine(Game::draw_getpixel),
    "draw_set_color" => Function::Engine(Game::draw_set_color),
    "draw_set_alpha" => Function::Engine(Game::draw_set_alpha),
    "draw_get_color" => Function::Constant(Game::draw_get_color),
    "draw_get_alpha" => Function::Constant(Game::draw_get_alpha),
    "make_color" => Function::Pure(Game::make_color_rgb),
    "make_color_rgb" => Function::Pure(Game::make_color_rgb),
    "make_color_hsv" => Function::Pure(Game::make_color_hsv),
    "color_get_red" => Function::Pure(Game::color_get_red),
    "color_get_green" => Function::Pure(Game::color_get_green),
    "color_get_blue" => Function::Pure(Game::color_get_blue),
    "color_get_hue" => Function::Pure(Game::color_get_hue),
    "color_get_saturation" => Function::Pure(Game::color_get_saturation),
    "color_get_value" => Function::Pure(Game::color_get_value),
    "merge_color" => Function::Pure(Game::merge_color),
    "draw_set_blend_mode" => Function::Engine(Game::draw_set_blend_mode),
    "draw_set_blend_mode_ext" => Function::Engine(Game::draw_set_blend_mode_ext),
    "draw_clear" => Function::Engine(Game::draw_clear),
    "draw_clear_alpha" => Function::Engine(Game::draw_clear_alpha),
    "draw_point" => Function::Engine(Game::draw_point),
    "draw_line" => Function::Engine(Game::draw_line),
    "draw_line_width" => Function::Engine(Game::draw_line_width),
    "draw_rectangle" => Function::Engine(Game::draw_rectangle),
    "draw_roundrect" => Function::Engine(Game::draw_roundrect),
    "draw_triangle" => Function::Engine(Game::draw_triangle),
    "draw_circle" => Function::Engine(Game::draw_circle),
    "draw_ellipse" => Function::Engine(Game::draw_ellipse),
    "draw_arrow" => Function::Engine(Game::draw_arrow),
    "draw_button" => Function::Engine(Game::draw_button),
    "draw_healthbar" => Function::Engine(Game::draw_healthbar),
    "draw_path" => Function::Engine(Game::draw_path),
    "draw_point_color" => Function::Engine(Game::draw_point_color),
    "draw_line_color" => Function::Engine(Game::draw_line_color),
    "draw_line_width_color" => Function::Engine(Game::draw_line_width_color),
    "draw_rectangle_color" => Function::Engine(Game::draw_rectangle_color),
    "draw_roundrect_color" => Function::Engine(Game::draw_roundrect_color),
    "draw_triangle_color" => Function::Engine(Game::draw_triangle_color),
    "draw_circle_color" => Function::Engine(Game::draw_circle_color),
    "draw_ellipse_color" => Function::Engine(Game::draw_ellipse_color),
    "draw_set_circle_precision" => Function::Engine(Game::draw_set_circle_precision),
    "draw_primitive_begin" => Function::Engine(Game::draw_primitive_begin),
    "draw_primitive_begin_texture" => Function::Engine(Game::draw_primitive_begin_texture),
    "draw_primitive_end" => Function::Engine(Game::draw_primitive_end),
    "draw_vertex" => Function::Engine(Game::draw_vertex),
    "draw_vertex_color" => Function::Engine(Game::draw_vertex_color),
    "draw_vertex_texture" => Function::Engine(Game::draw_vertex_texture),
    "draw_vertex_texture_color" => Function::Engine(Game::draw_vertex_texture_color),
    "sprite_get_texture" => Function::Runtime(Game::sprite_get_texture),
    "background_get_texture" => Function::Engine(Game::background_get_texture),
    "texture_exists" => Function::Constant(Game::texture_exists),
    "texture_set_interpolation" => Function::Engine(Game::texture_set_interpolation),
    "texture_set_blending" => Function::Engine(Game::texture_set_blending),
    "texture_set_repeat" => Function::Engine(Game::texture_set_repeat),
    "texture_get_width" => Function::Pure(Game::texture_get_width),
    "texture_get_height" => Function::Pure(Game::texture_get_height),
    "texture_preload" => Function::Engine(Game::texture_preload),
    "texture_set_priority" => Function::Engine(Game::texture_set_priority),
    "draw_set_font" => Function::Engine(Game::draw_set_font),
    "draw_set_halign" => Function::Engine(Game::draw_set_halign),
    "draw_set_valign" => Function::Engine(Game::draw_set_valign),
    "string_width" => Function::Constant(Game::string_width),
    "string_height" => Function::Constant(Game::string_height),
    "string_width_ext" => Function::Constant(Game::string_width_ext),
    "string_height_ext" => Function::Constant(Game::string_height_ext),
    "draw_text" => Function::Engine(Game::draw_text),
    "draw_text_ext" => Function::Engine(Game::draw_text_ext),
    "draw_text_transformed" => Function::Engine(Game::draw_text_transformed),
    "draw_text_ext_transformed" => Function::Engine(Game::draw_text_ext_transformed),
    "draw_text_color" => Function::Engine(Game::draw_text_color),
    "draw_text_transformed_color" => Function::Engine(Game::draw_text_transformed_color),
    "draw_text_ext_color" => Function::Engine(Game::draw_text_ext_color),
    "draw_text_ext_transformed_color" => Function::Engine(Game::draw_text_ext_transformed_color),
    "draw_self" => Function::Runtime(Game::draw_self),
    "draw_sprite" => Function::Runtime(Game::draw_sprite),
    "draw_sprite_pos" => Function::Runtime(Game::draw_sprite_pos),
    "draw_sprite_ext" => Function::Runtime(Game::draw_sprite_ext),
    "draw_sprite_stretched" => Function::Runtime(Game::draw_sprite_stretched),
    "draw_sprite_stretched_ext" => Function::Runtime(Game::draw_sprite_stretched_ext),
    "draw_sprite_part" => Function::Runtime(Game::draw_sprite_part),
    "draw_sprite_part_ext" => Function::Runtime(Game::draw_sprite_part_ext),
    "draw_sprite_general" => Function::Runtime(Game::draw_sprite_general),
    "draw_sprite_tiled" => Function::Runtime(Game::draw_sprite_tiled),
    "draw_sprite_tiled_ext" => Function::Runtime(Game::draw_sprite_tiled_ext),
    "draw_background" => Function::Engine(Game::draw_background),
    "draw_background_ext" => Function::Engine(Game::draw_background_ext),
    "draw_background_stretched" => Function::Engine(Game::draw_background_stretched),
    "draw_background_stretched_ext" => Function::Engine(Game::draw_background_stretched_ext),
    "draw_background_part" => Function::Engine(Game::draw_background_part),
    "draw_background_part_ext" => Function::Engine(Game::draw_background_part_ext),
    "draw_background_general" => Function::Engine(Game::draw_background_general),
    "draw_background_tiled" => Function::Engine(Game::draw_background_tiled),
    "draw_background_tiled_ext" => Function::Engine(Game::draw_background_tiled_ext),
    "tile_get_x" => Function::Constant(Game::tile_get_x),
    "tile_get_y" => Function::Constant(Game::tile_get_y),
    "tile_get_left" => Function::Constant(Game::tile_get_left),
    "tile_get_top" => Function::Constant(Game::tile_get_top),
    "tile_get_width" => Function::Constant(Game::tile_get_width),
    "tile_get_height" => Function::Constant(Game::tile_get_height),
    "tile_get_depth" => Function::Constant(Game::tile_get_depth),
    "tile_get_visible" => Function::Constant(Game::tile_get_visible),
    "tile_get_xscale" => Function::Constant(Game::tile_get_xscale),
    "tile_get_yscale" => Function::Constant(Game::tile_get_yscale),
    "tile_get_blend" => Function::Constant(Game::tile_get_blend),
    "tile_get_alpha" => Function::Constant(Game::tile_get_alpha),
    "tile_get_background" => Function::Constant(Game::tile_get_background),
    "tile_set_visible" => Function::Engine(Game::tile_set_visible),
    "tile_set_background" => Function::Engine(Game::tile_set_background),
    "tile_set_region" => Function::Engine(Game::tile_set_region),
    "tile_set_position" => Function::Engine(Game::tile_set_position),
    "tile_set_depth" => Function::Engine(Game::tile_set_depth),
    "tile_set_scale" => Function::Engine(Game::tile_set_scale),
    "tile_set_blend" => Function::Engine(Game::tile_set_blend),
    "tile_set_alpha" => Function::Engine(Game::tile_set_alpha),
    "tile_add" => Function::Engine(Game::tile_add),
    "tile_find" => Function::Constant(Game::tile_find),
    "tile_exists" => Function::Constant(Game::tile_exists),
    "tile_delete" => Function::Engine(Game::tile_delete),
    "tile_delete_at" => Function::Engine(Game::tile_delete_at),
    "tile_layer_hide" => Function::Engine(Game::tile_layer_hide),
    "tile_layer_show" => Function::Engine(Game::tile_layer_show),
    "tile_layer_delete" => Function::Engine(Game::tile_layer_delete),
    "tile_layer_shift" => Function::Engine(Game::tile_layer_shift),
    "tile_layer_find" => Function::Constant(Game::tile_layer_find),
    "tile_layer_delete_at" => Function::Engine(Game::tile_layer_delete_at),
    "tile_layer_depth" => Function::Engine(Game::tile_layer_depth),
    "surface_create" => Function::Engine(Game::surface_create),
    "surface_create_ext" => Function::Pure(Game::surface_create_ext),
    "surface_free" => Function::Engine(Game::surface_free),
    "surface_exists" => Function::Constant(Game::surface_exists),
    "surface_get_width" => Function::Constant(Game::surface_get_width),
    "surface_get_height" => Function::Constant(Game::surface_get_height),
    "surface_get_texture" => Function::Engine(Game::surface_get_texture),
    "surface_set_target" => Function::Engine(Game::surface_set_target),
    "surface_reset_target" => Function::Engine(Game::surface_reset_target),
    "draw_surface" => Function::Engine(Game::draw_surface),
    "draw_surface_ext" => Function::Engine(Game::draw_surface_ext),
    "draw_surface_stretched" => Function::Engine(Game::draw_surface_stretched),
    "draw_surface_stretched_ext" => Function::Engine(Game::draw_surface_stretched_ext),
    "draw_surface_part" => Function::Engine(Game::draw_surface_part),
    "draw_surface_part_ext" => Function::Engine(Game::draw_surface_part_ext),
    "draw_surface_general" => Function::Engine(Game::draw_surface_general),
    "draw_surface_tiled" => Function::Engine(Game::draw_surface_tiled),
    "draw_surface_tiled_ext" => Function::Engine(Game::draw_surface_tiled_ext),
    "surface_save" => Function::Engine(Game::surface_save),
    "surface_save_part" => Function::Engine(Game::surface_save_part),
    "surface_getpixel" => Function::Engine(Game::surface_getpixel),
    "surface_copy" => Function::Engine(Game::surface_copy),
    "surface_copy_part" => Function::Engine(Game::surface_copy_part),
    "action_path_old" => Function::Engine(Game::action_path_old),
    "action_set_sprite" => Function::Runtime(Game::action_set_sprite),
    "action_draw_font" => Function::Runtime(Game::action_draw_font),
    "action_draw_font_old" => Function::Runtime(Game::action_draw_font_old),
    "action_fill_color" => Function::Engine(Game::action_fill_color),
    "action_line_color" => Function::Engine(Game::action_line_color),
    "action_highscore" => Function::Pure(Game::action_highscore),
    "action_move" => Function::Runtime(Game::action_move),
    "action_set_motion" => Function::Runtime(Game::action_set_motion),
    "action_set_hspeed" => Function::Runtime(Game::action_set_hspeed),
    "action_set_vspeed" => Function::Runtime(Game::action_set_vspeed),
    "action_set_gravity" => Function::Runtime(Game::action_set_gravity),
    "action_set_friction" => Function::Runtime(Game::action_set_friction),
    "action_move_point" => Function::Runtime(Game::action_move_point),
    "action_move_to" => Function::Runtime(Game::action_move_to),
    "action_move_start" => Function::Runtime(Game::action_move_start),
    "action_move_random" => Function::Runtime(Game::move_random),
    "action_snap" => Function::Runtime(Game::move_snap),
    "action_wrap" => Function::Runtime(Game::action_wrap),
    "action_reverse_xdir" => Function::Runtime(Game::action_reverse_xdir),
    "action_reverse_ydir" => Function::Runtime(Game::action_reverse_ydir),
    "action_move_contact" => Function::Runtime(Game::action_move_contact),
    "action_bounce" => Function::Runtime(Game::action_bounce),
    "action_path" => Function::Runtime(Game::path_start),
    "action_path_end" => Function::Runtime(Game::path_end),
    "action_path_position" => Function::Runtime(Game::action_path_position),
    "action_path_speed" => Function::Runtime(Game::action_path_speed),
    "action_linear_step" => Function::Runtime(Game::action_linear_step),
    "action_potential_step" => Function::Runtime(Game::action_potential_step),
    "action_kill_object" => Function::Runtime(Game::instance_destroy),
    "action_create_object" => Function::Runtime(Game::action_create_object),
    "action_create_object_motion" => Function::Runtime(Game::action_create_object_motion),
    "action_create_object_random" => Function::Runtime(Game::action_create_object_random),
    "action_change_object" => Function::Runtime(Game::instance_change),
    "action_kill_position" => Function::Runtime(Game::action_kill_position),
    "action_sprite_set" => Function::Runtime(Game::action_sprite_set),
    "action_sprite_transform" => Function::Runtime(Game::action_sprite_transform),
    "action_sprite_color" => Function::Runtime(Game::action_sprite_color),
    "action_sound" => Function::Engine(Game::action_sound),
    "action_end_sound" => Function::Engine(Game::sound_stop),
    "action_if_sound" => Function::Volatile(Game::action_if_sound),
    "action_another_room" => Function::Engine(Game::action_another_room),
    "action_current_room" => Function::Engine(Game::action_current_room),
    "action_previous_room" => Function::Engine(Game::action_previous_room),
    "action_next_room" => Function::Engine(Game::action_next_room),
    "action_if_previous_room" => Function::Constant(Game::action_if_previous_room),
    "action_if_next_room" => Function::Constant(Game::action_if_next_room),
    "action_set_alarm" => Function::Runtime(Game::action_set_alarm),
    "action_sleep" => Function::Engine(Game::action_sleep),
    "action_set_timeline" => Function::Runtime(Game::action_set_timeline),
    "action_timeline_set" => Function::Runtime(Game::action_timeline_set),
    "action_timeline_start" => Function::Runtime(Game::action_timeline_start),
    "action_timeline_pause" => Function::Runtime(Game::action_timeline_pause),
    "action_timeline_stop" => Function::Runtime(Game::action_timeline_stop),
    "action_set_timeline_position" => Function::Runtime(Game::action_set_timeline_position),
    "action_set_timeline_speed" => Function::Runtime(Game::action_set_timeline_speed),
    "action_message" => Function::Engine(Game::action_message),
    "action_show_info" => Function::Engine(Game::show_info),
    "action_show_video" => Function::Engine(Game::show_video),
    "action_splash_video" => Function::Engine(Game::splash_show_video),
    "action_splash_text" => Function::Engine(Game::action_splash_text),
    "action_splash_image" => Function::Engine(Game::action_splash_image),
    "action_splash_web" => Function::Engine(Game::action_splash_web),
    "action_splash_settings" => Function::Engine(Game::action_splash_settings),
    "action_end_game" => Function::Engine(Game::game_end),
    "action_restart_game" => Function::Engine(Game::game_restart),
    "action_save_game" => Function::Engine(Game::game_save),
    "action_load_game" => Function::Engine(Game::game_load),
    "action_replace_sprite" => Function::Engine(Game::action_replace_sprite),
    "action_replace_sound" => Function::Engine(Game::action_replace_sound),
    "action_replace_background" => Function::Engine(Game::action_replace_background),
    "action_if_empty" => Function::Runtime(Game::action_if_empty),
    "action_if_collision" => Function::Runtime(Game::action_if_collision),
    "action_if" => Function::Pure(Game::action_if),
    "action_if_number" => Function::Constant(Game::action_if_number),
    "action_if_object" => Function::Runtime(Game::action_if_object),
    "action_if_question" => Function::Engine(Game::action_if_question),
    "action_if_dice" => Function::Engine(Game::action_if_dice),
    "action_if_mouse" => Function::Engine(Game::action_if_mouse),
    "action_if_aligned" => Function::Runtime(Game::action_if_aligned),
    "action_execute_script" => Function::Runtime(Game::action_execute_script),
    "action_inherited" => Function::Runtime(Game::event_inherited),
    "action_if_variable" => Function::Pure(Game::action_if_variable),
    "action_draw_variable" => Function::Runtime(Game::action_draw_variable),
    "action_set_score" => Function::Runtime(Game::action_set_score),
    "action_if_score" => Function::Constant(Game::action_if_score),
    "action_draw_score" => Function::Runtime(Game::action_draw_score),
    "action_highscore_show" => Function::Engine(Game::action_highscore_show),
    "action_highscore_clear" => Function::Engine(Game::highscore_clear),
    "action_set_life" => Function::Runtime(Game::action_set_life),
    "action_if_life" => Function::Constant(Game::action_if_life),
    "action_draw_life" => Function::Runtime(Game::action_draw_life),
    "action_draw_life_images" => Function::Runtime(Game::action_draw_life_images),
    "action_set_health" => Function::Runtime(Game::action_set_health),
    "action_if_health" => Function::Constant(Game::action_if_health),
    "action_draw_health" => Function::Runtime(Game::action_draw_health),
    "action_set_caption" => Function::Engine(Game::action_set_caption),
    "action_partsyst_create" => Function::Engine(Game::action_partsyst_create),
    "action_partsyst_destroy" => Function::Engine(Game::action_partsyst_destroy),
    "action_partsyst_clear" => Function::Engine(Game::action_partsyst_clear),
    "action_parttype_create_old" => Function::Engine(Game::action_parttype_create_old),
    "action_parttype_create" => Function::Engine(Game::action_parttype_create),
    "action_parttype_color" => Function::Engine(Game::action_parttype_color),
    "action_parttype_life" => Function::Engine(Game::action_parttype_life),
    "action_parttype_speed" => Function::Engine(Game::action_parttype_speed),
    "action_parttype_gravity" => Function::Engine(Game::action_parttype_gravity),
    "action_parttype_secondary" => Function::Engine(Game::action_parttype_secondary),
    "action_partemit_create" => Function::Engine(Game::action_partemit_create),
    "action_partemit_destroy" => Function::Engine(Game::action_partemit_destroy),
    "action_partemit_burst" => Function::Engine(Game::action_partemit_burst),
    "action_partemit_stream" => Function::Engine(Game::action_partemit_stream),
    "action_cd_play" => Function::Volatile(Game::cd_play),
    "action_cd_stop" => Function::Volatile(Game::cd_stop),
    "action_cd_pause" => Function::Volatile(Game::cd_pause),
    "action_cd_resume" => Function::Volatile(Game::cd_resume),
    "action_cd_present" => Function::Volatile(Game::cd_present),
    "action_cd_playing" => Function::Volatile(Game::cd_playing),
    "action_set_cursor" => Function::Engine(Game::action_set_cursor),
    "action_webpage" => Function::Engine(Game::action_webpage),
    "action_draw_sprite" => Function::Runtime(Game::action_draw_sprite),
    "action_draw_background" => Function::Runtime(Game::action_draw_background),
    "action_draw_text" => Function::Runtime(Game::action_draw_text),
    "action_draw_text_transformed" => Function::Runtime(Game::action_draw_text_transformed),
    "action_draw_rectangle" => Function::Runtime(Game::action_draw_rectangle),
    "action_draw_gradient_hor" => Function::Runtime(Game::action_draw_gradient_hor),
    "action_draw_gradient_vert" => Function::Runtime(Game::action_draw_gradient_vert),
    "action_draw_ellipse" => Function::Runtime(Game::action_draw_ellipse),
    "action_draw_ellipse_gradient" => Function::Runtime(Game::action_draw_ellipse_gradient),
    "action_draw_line" => Function::Runtime(Game::action_draw_line),
    "action_draw_arrow" => Function::Runtime(Game::action_draw_arrow),
    "action_color" => Function::Engine(Game::draw_set_color),
    "action_font" => Function::Engine(Game::action_font),
    "action_fullscreen" => Function::Engine(Game::action_fullscreen),
    "action_snapshot" => Function::Engine(Game::screen_save),
    "action_effect" => Function::Runtime(Game::action_effect),
    "is_real" => Function::Pure(Game::is_real),
    "is_string" => Function::Pure(Game::is_string),
    "random" => Function::Engine(Game::random),
    "random_range" => Function::Engine(Game::random_range),
    "irandom" => Function::Engine(Game::irandom),
    "irandom_range" => Function::Engine(Game::irandom_range),
    "random_set_seed" => Function::Engine(Game::random_set_seed),
    "random_get_seed" => Function::Constant(Game::random_get_seed),
    "randomize" => Function::Engine(Game::randomize),
    "abs" => Function::Pure(Game::abs),
    "round" => Function::Pure(Game::round),
    "floor" => Function::Pure(Game::floor),
    "ceil" => Function::Pure(Game::ceil),
    "sign" => Function::Pure(Game::sign),
    "frac" => Function::Pure(Game::frac),
    "sqrt" => Function::Pure(Game::sqrt),
    "sqr" => Function::Pure(Game::sqr),
    "exp" => Function::Pure(Game::exp),
    "ln" => Function::Pure(Game::ln),
    "log2" => Function::Pure(Game::log2),
    "log10" => Function::Pure(Game::log10),
    "sin" => Function::Pure(Game::sin),
    "cos" => Function::Pure(Game::cos),
    "tan" => Function::Pure(Game::tan),
    "arcsin" => Function::Pure(Game::arcsin),
    "arccos" => Function::Pure(Game::arccos),
    "arctan" => Function::Pure(Game::arctan),
    "arctan2" => Function::Pure(Game::arctan2),
    "degtorad" => Function::Pure(Game::degtorad),
    "radtodeg" => Function::Pure(Game::radtodeg),
    "power" => Function::Pure(Game::power),
    "logn" => Function::Pure(Game::logn),
    "min" => Function::Pure(Game::min),
    "max" => Function::Pure(Game::max),
    "min3" => Function::Pure(Game::min3),
    "max3" => Function::Pure(Game::max3),
    "mean" => Function::Pure(Game::mean),
    "median" => Function::Pure(Game::median),
    "choose" => Function::Engine(Game::choose),
    "clamp" => Function::Pure(Game::clamp),
    "lerp" => Function::Pure(Game::lerp),
    "real" => Function::Constant(Game::real),
    "string" => Function::Pure(Game::string),
    "string_format" => Function::Pure(Game::string_format),
    "chr" => Function::Constant(Game::chr),
    "ansi_char" => Function::Pure(Game::ansi_char),
    "ord" => Function::Pure(Game::ord),
    "string_length" => Function::Constant(Game::string_length),
    "string_byte_length" => Function::Pure(Game::string_byte_length),
    "string_byte_at" => Function::Pure(Game::string_byte_at),
    "string_pos" => Function::Constant(Game::string_pos),
    "string_copy" => Function::Constant(Game::string_copy),
    "string_char_at" => Function::Constant(Game::string_char_at),
    "string_delete" => Function::Constant(Game::string_delete),
    "string_insert" => Function::Pure(Game::string_insert),
    "string_lower" => Function::Constant(Game::string_lower),
    "string_upper" => Function::Constant(Game::string_upper),
    "string_repeat" => Function::Pure(Game::string_repeat),
    "string_letters" => Function::Pure(Game::string_letters),
    "string_digits" => Function::Pure(Game::string_digits),
    "string_lettersdigits" => Function::Pure(Game::string_lettersdigits),
    "string_replace" => Function::Pure(Game::string_replace),
    "string_replace_all" => Function::Pure(Game::string_replace_all),
    "string_count" => Function::Pure(Game::string_count),
    "dot_product" => Function::Pure(Game::dot_product),
    "dot_product_3d" => Function::Pure(Game::dot_product_3d),
    "point_distance_3d" => Function::Pure(Game::point_distance_3d),
    "point_distance" => Function::Pure(Game::point_distance),
    "point_direction" => Function::Pure(Game::point_direction),
    "lengthdir_x" => Function::Pure(Game::lengthdir_x),
    "lengthdir_y" => Function::Pure(Game::lengthdir_y),
    "move_random" => Function::Runtime(Game::move_random),
    "place_free" => Function::Runtime(Game::place_free),
    "place_empty" => Function::Runtime(Game::place_empty),
    "place_meeting" => Function::Runtime(Game::place_meeting),
    "place_snapped" => Function::Runtime(Game::place_snapped),
    "move_snap" => Function::Runtime(Game::move_snap),
    "move_towards_point" => Function::Runtime(Game::move_towards_point),
    "move_contact" => Function::Runtime(Game::move_contact),
    "move_contact_solid" => Function::Runtime(Game::move_contact_solid),
    "move_contact_all" => Function::Runtime(Game::move_contact_all),
    "move_outside_solid" => Function::Runtime(Game::move_outside_solid),
    "move_outside_all" => Function::Runtime(Game::move_outside_all),
    "move_bounce" => Function::Runtime(Game::move_bounce_solid),
    "move_bounce_solid" => Function::Runtime(Game::move_bounce_solid),
    "move_bounce_all" => Function::Runtime(Game::move_bounce_all),
    "move_wrap" => Function::Runtime(Game::move_wrap),
    "motion_set" => Function::Runtime(Game::motion_set),
    "motion_add" => Function::Runtime(Game::motion_add),
    "distance_to_point" => Function::Runtime(Game::distance_to_point),
    "distance_to_object" => Function::Runtime(Game::distance_to_object),
    "path_start" => Function::Runtime(Game::path_start),
    "path_end" => Function::Runtime(Game::path_end),
    "mp_linear_step" => Function::Runtime(Game::mp_linear_step),
    "mp_linear_path" => Function::Runtime(Game::mp_linear_path),
    "mp_linear_step_object" => Function::Runtime(Game::mp_linear_step_object),
    "mp_linear_path_object" => Function::Runtime(Game::mp_linear_path_object),
    "mp_potential_settings" => Function::Engine(Game::mp_potential_settings),
    "mp_potential_step" => Function::Runtime(Game::mp_potential_step),
    "mp_potential_path" => Function::Runtime(Game::mp_potential_path),
    "mp_potential_step_object" => Function::Runtime(Game::mp_potential_step_object),
    "mp_potential_path_object" => Function::Runtime(Game::mp_potential_path_object),
    "mp_grid_create" => Function::Engine(Game::mp_grid_create),
    "mp_grid_destroy" => Function::Engine(Game::mp_grid_destroy),
    "mp_grid_clear_all" => Function::Engine(Game::mp_grid_clear_all),
    "mp_grid_clear_cell" => Function::Engine(Game::mp_grid_clear_cell),
    "mp_grid_clear_rectangle" => Function::Engine(Game::mp_grid_clear_rectangle),
    "mp_grid_add_cell" => Function::Engine(Game::mp_grid_add_cell),
    "mp_grid_add_rectangle" => Function::Engine(Game::mp_grid_add_rectangle),
    "mp_grid_add_instances" => Function::Runtime(Game::mp_grid_add_instances),
    "mp_grid_path" => Function::Engine(Game::mp_grid_path),
    "mp_grid_draw" => Function::Engine(Game::mp_grid_draw),
    "collision_point" => Function::Runtime(Game::collision_point),
    "collision_rectangle" => Function::Runtime(Game::collision_rectangle),
    "collision_circle" => Function::Runtime(Game::collision_circle),
    "collision_ellipse" => Function::Runtime(Game::collision_ellipse),
    "collision_line" => Function::Runtime(Game::collision_line),
    "instance_find" => Function::Constant(Game::instance_find),
    "instance_exists" => Function::Runtime(Game::instance_exists),
    "instance_number" => Function::Runtime(Game::instance_number),
    "instance_position" => Function::Constant(Game::instance_position),
    "instance_nearest" => Function::Constant(Game::instance_nearest),
    "instance_furthest" => Function::Constant(Game::instance_furthest),
    "instance_place" => Function::Runtime(Game::instance_place),
    "instance_create" => Function::Engine(Game::instance_create),
    "instance_copy" => Function::Runtime(Game::instance_copy),
    "instance_change" => Function::Runtime(Game::instance_change),
    "instance_destroy" => Function::Runtime(Game::instance_destroy),
    "instance_sprite" => Function::Runtime(Game::instance_sprite),
    "position_empty" => Function::Runtime(Game::position_empty),
    "position_meeting" => Function::Runtime(Game::position_meeting),
    "position_destroy" => Function::Engine(Game::position_destroy),
    "position_change" => Function::Engine(Game::position_change),
    "instance_deactivate_all" => Function::Runtime(Game::instance_deactivate_all),
    "instance_deactivate_object" => Function::Runtime(Game::instance_deactivate_object),
    "instance_deactivate_region" => Function::Runtime(Game::instance_deactivate_region),
    "instance_activate_all" => Function::Engine(Game::instance_activate_all),
    "instance_activate_object" => Function::Runtime(Game::instance_activate_object),
    "instance_activate_region" => Function::Engine(Game::instance_activate_region),
    "room_goto" => Function::Engine(Game::room_goto),
    "room_goto_previous" => Function::Engine(Game::room_goto_previous),
    "room_goto_next" => Function::Engine(Game::room_goto_next),
    "room_previous" => Function::Constant(Game::room_previous),
    "room_next" => Function::Constant(Game::room_next),
    "room_restart" => Function::Engine(Game::room_restart),
    "game_end" => Function::Engine(Game::game_end),
    "game_restart" => Function::Engine(Game::game_restart),
    "game_load" => Function::Engine(Game::game_load),
    "game_save" => Function::Engine(Game::game_save),
    "transition_define" => Function::Engine(Game::transition_define),
    "transition_exists" => Function::Engine(Game::transition_exists),
    "sleep" => Function::Engine(Game::sleep),
    "YoYo_GetPlatform" => Function::Pure(Game::yoyo_getplatform),
    "YoYo_GetDevice" => Function::Pure(Game::yoyo_getdevice),
    "YoYo_OpenURL" => Function::Pure(Game::yoyo_openurl),
    "YoYo_OpenURL_ext" => Function::Pure(Game::yoyo_openurl_ext),
    "YoYo_OpenURL_full" => Function::Pure(Game::yoyo_openurl_full),
    "YoYo_GetDomain" => Function::Pure(Game::yoyo_getdomain),
    "YoYo_GetTimer" => Function::Pure(Game::yoyo_gettimer),
    "YoYo_AddVirtualKey" => Function::Pure(Game::yoyo_addvirtualkey),
    "YoYo_DeleteVirtualKey" => Function::Pure(Game::yoyo_deletevirtualkey),
    "YoYo_ShowVirtualKey" => Function::Pure(Game::yoyo_showvirtualkey),
    "YoYo_HideVirtualKey" => Function::Pure(Game::yoyo_hidevirtualkey),
    "YoYo_EnableAlphaBlend" => Function::Engine(Game::yoyo_enablealphablend),
    "file_bin_open" => Function::Engine(Game::file_bin_open),
    "file_bin_rewrite" => Function::Engine(Game::file_bin_rewrite),
    "file_bin_close" => Function::Engine(Game::file_bin_close),
    "file_bin_position" => Function::Engine(Game::file_bin_position),
    "file_bin_size" => Function::Engine(Game::file_bin_size),
    "file_bin_seek" => Function::Engine(Game::file_bin_seek),
    "file_bin_read_byte" => Function::Engine(Game::file_bin_read_byte),
    "file_bin_write_byte" => Function::Engine(Game::file_bin_write_byte),
    "file_text_open_read" => Function::Engine(Game::file_text_open_read),
    "file_text_open_write" => Function::Engine(Game::file_text_open_write),
    "file_text_open_append" => Function::Engine(Game::file_text_open_append),
    "file_text_close" => Function::Engine(Game::file_text_close),
    "file_text_read_string" => Function::Engine(Game::file_text_read_string),
    "file_text_read_real" => Function::Engine(Game::file_text_read_real),
    "file_text_readln" => Function::Engine(Game::file_text_readln),
    "file_text_eof" => Function::Engine(Game::file_text_eof),
    "file_text_eoln" => Function::Engine(Game::file_text_eoln),
    "file_text_write_string" => Function::Engine(Game::file_text_write_string),
    "file_text_write_real" => Function::Engine(Game::file_text_write_real),
    "file_text_writeln" => Function::Engine(Game::file_text_writeln),
    "file_open_read" => Function::Engine(Game::file_open_read),
    "file_open_write" => Function::Engine(Game::file_open_write),
    "file_open_append" => Function::Engine(Game::file_open_append),
    "file_close" => Function::Engine(Game::file_close),
    "file_read_string" => Function::Engine(Game::file_read_string),
    "file_read_real" => Function::Engine(Game::file_read_real),
    "file_readln" => Function::Engine(Game::file_readln),
    "file_eof" => Function::Engine(Game::file_eof),
    "file_eoln" => Function::Engine(Game::file_eoln),
    "file_write_string" => Function::Engine(Game::file_write_string),
    "file_write_real" => Function::Engine(Game::file_write_real),
    "file_writeln" => Function::Engine(Game::file_writeln),
    "file_exists" => Function::Volatile(Game::file_exists),
    "file_delete" => Function::Volatile(Game::file_delete),
    "file_rename" => Function::Volatile(Game::file_rename),
    "file_copy" => Function::Volatile(Game::file_copy),
    "directory_exists" => Function::Volatile(Game::directory_exists),
    "directory_create" => Function::Volatile(Game::directory_create),
    "file_find_first" => Function::Engine(Game::file_find_first),
    "file_find_next" => Function::Engine(Game::file_find_next),
    "file_find_close" => Function::Engine(Game::file_find_close),
    "file_attributes" => Function::Volatile(Game::file_attributes),
    "filename_name" => Function::Pure(Game::filename_name),
    "filename_path" => Function::Pure(Game::filename_path),
    "filename_dir" => Function::Pure(Game::filename_dir),
    "filename_drive" => Function::Pure(Game::filename_drive),
    "filename_ext" => Function::Pure(Game::filename_ext),
    "filename_change_ext" => Function::Pure(Game::filename_change_ext),
    "export_include_file" => Function::Engine(Game::export_include_file),
    "export_include_file_location" => Function::Engine(Game::export_include_file_location),
    "discard_include_file" => Function::Engine(Game::discard_include_file),
    "execute_program" => Function::Engine(Game::execute_program),
    "execute_shell" => Function::Engine(Game::execute_shell),
    "parameter_count" => Function::Constant(Game::parameter_count),
    "parameter_string" => Function::Constant(Game::parameter_string),
    "environment_get_variable" => Function::Volatile(Game::environment_get_variable),
    "registry_write_string" => Function::Volatile(Game::registry_write_string),
    "registry_write_real" => Function::Volatile(Game::registry_write_real),
    "registry_read_string" => Function::Volatile(Game::registry_read_string),
    "registry_read_real" => Function::Volatile(Game::registry_read_real),
    "registry_exists" => Function::Volatile(Game::registry_exists),
    "registry_write_string_ext" => Function::Volatile(Game::registry_write_string_ext),
    "registry_write_real_ext" => Function::Volatile(Game::registry_write_real_ext),
    "registry_read_string_ext" => Function::Volatile(Game::registry_read_string_ext),
    "registry_read_real_ext" => Function::Volatile(Game::registry_read_real_ext),
    "registry_exists_ext" => Function::Volatile(Game::registry_exists_ext),
    "registry_set_root" => Function::Engine(Game::registry_set_root),
    "ini_open" => Function::Engine(Game::ini_open),
    "ini_close" => Function::Engine(Game::ini_close),
    "ini_read_string" => Function::Constant(Game::ini_read_string),
    "ini_read_real" => Function::Constant(Game::ini_read_real),
    "ini_write_string" => Function::Engine(Game::ini_write_string),
    "ini_write_real" => Function::Engine(Game::ini_write_real),
    "ini_key_exists" => Function::Constant(Game::ini_key_exists),
    "ini_section_exists" => Function::Constant(Game::ini_section_exists),
    "ini_key_delete" => Function::Engine(Game::ini_key_delete),
    "ini_section_delete" => Function::Engine(Game::ini_section_delete),
    "disk_free" => Function::Volatile(Game::disk_free),
    "disk_size" => Function::Volatile(Game::disk_size),
    "splash_set_caption" => Function::Engine(Game::splash_set_caption),
    "splash_set_fullscreen" => Function::Engine(Game::splash_set_fullscreen),
    "splash_set_border" => Function::Engine(Game::splash_set_border),
    "splash_set_size" => Function::Engine(Game::splash_set_size),
    "splash_set_position" => Function::Engine(Game::splash_set_position),
    "splash_set_adapt" => Function::Engine(Game::splash_set_adapt),
    "splash_set_top" => Function::Engine(Game::splash_set_top),
    "splash_set_color" => Function::Engine(Game::splash_set_color),
    "splash_set_main" => Function::Engine(Game::splash_set_main),
    "splash_set_scale" => Function::Engine(Game::splash_set_scale),
    "splash_set_cursor" => Function::Engine(Game::splash_set_cursor),
    "splash_set_interrupt" => Function::Engine(Game::splash_set_interrupt),
    "splash_set_stop_key" => Function::Engine(Game::splash_set_stop_key),
    "splash_set_close_button" => Function::Engine(Game::splash_set_close_button),
    "splash_set_stop_mouse" => Function::Engine(Game::splash_set_stop_mouse),
    "splash_show_video" => Function::Engine(Game::splash_show_video),
    "splash_show_image" => Function::Engine(Game::splash_show_image),
    "splash_show_text" => Function::Engine(Game::splash_show_text),
    "splash_show_web" => Function::Engine(Game::splash_show_web),
    "show_image" => Function::Engine(Game::show_image),
    "show_video" => Function::Engine(Game::show_video),
    "show_text" => Function::Engine(Game::show_text),
    "show_message" => Function::Engine(Game::show_message),
    "show_question" => Function::Engine(Game::show_question),
    "show_error" => Function::Engine(Game::show_error),
    "show_info" => Function::Engine(Game::show_info),
    "load_info" => Function::Engine(Game::load_info),
    "highscore_show" => Function::Engine(Game::highscore_show),
    "highscore_set_background" => Function::Engine(Game::highscore_set_background),
    "highscore_set_border" => Function::Engine(Game::highscore_set_border),
    "highscore_set_font" => Function::Engine(Game::highscore_set_font),
    "highscore_set_strings" => Function::Engine(Game::highscore_set_strings),
    "highscore_set_colors" => Function::Engine(Game::highscore_set_colors),
    "highscore_show_ext" => Function::Engine(Game::highscore_show_ext),
    "highscore_clear" => Function::Engine(Game::highscore_clear),
    "highscore_add" => Function::Engine(Game::highscore_add),
    "highscore_add_current" => Function::Engine(Game::highscore_add_current),
    "highscore_value" => Function::Constant(Game::highscore_value),
    "highscore_name" => Function::Constant(Game::highscore_name),
    "draw_highscore" => Function::Engine(Game::draw_highscore),
    "show_message_ext" => Function::Engine(Game::show_message_ext),
    "message_background" => Function::Engine(Game::message_background),
    "message_button" => Function::Engine(Game::message_button),
    "message_alpha" => Function::Engine(Game::message_alpha),
    "message_text_font" => Function::Engine(Game::message_text_font),
    "message_button_font" => Function::Engine(Game::message_button_font),
    "message_input_font" => Function::Engine(Game::message_input_font),
    "message_text_charset" => Function::Engine(Game::message_text_charset),
    "message_mouse_color" => Function::Engine(Game::message_mouse_color),
    "message_input_color" => Function::Engine(Game::message_input_color),
    "message_position" => Function::Engine(Game::message_position),
    "message_size" => Function::Engine(Game::message_size),
    "message_caption" => Function::Engine(Game::message_caption),
    "show_menu" => Function::Engine(Game::show_menu),
    "show_menu_pos" => Function::Engine(Game::show_menu_pos),
    "get_integer" => Function::Engine(Game::get_integer),
    "get_string" => Function::Engine(Game::get_string),
    "get_color" => Function::Engine(Game::get_color),
    "get_open_filename" => Function::Engine(Game::get_open_filename),
    "get_save_filename" => Function::Engine(Game::get_save_filename),
    "get_directory" => Function::Engine(Game::get_directory),
    "get_directory_alt" => Function::Engine(Game::get_directory_alt),
    "keyboard_get_numlock" => Function::Constant(Game::keyboard_get_numlock),
    "keyboard_set_numlock" => Function::Engine(Game::keyboard_set_numlock),
    "keyboard_key_press" => Function::Engine(Game::keyboard_key_press),
    "keyboard_key_release" => Function::Engine(Game::keyboard_key_release),
    "keyboard_set_map" => Function::Engine(Game::keyboard_set_map),
    "keyboard_get_map" => Function::Engine(Game::keyboard_get_map),
    "keyboard_unset_map" => Function::Engine(Game::keyboard_unset_map),
    "keyboard_check" => Function::Constant(Game::keyboard_check),
    "keyboard_check_pressed" => Function::Constant(Game::keyboard_check_pressed),
    "keyboard_check_released" => Function::Constant(Game::keyboard_check_released),
    "keyboard_check_direct" => Function::Volatile(Game::keyboard_check_direct),
    "mouse_check_button" => Function::Constant(Game::mouse_check_button),
    "mouse_check_button_pressed" => Function::Constant(Game::mouse_check_button_pressed),
    "mouse_check_button_released" => Function::Constant(Game::mouse_check_button_released),
    "mouse_wheel_up" => Function::Constant(Game::mouse_wheel_up),
    "mouse_wheel_down" => Function::Constant(Game::mouse_wheel_down),
    "joystick_exists" => Function::Engine(Game::joystick_exists),
    "joystick_direction" => Function::Engine(Game::joystick_direction),
    "joystick_name" => Function::Engine(Game::joystick_name),
    "joystick_axes" => Function::Engine(Game::joystick_axes),
    "joystick_buttons" => Function::Engine(Game::joystick_buttons),
    "joystick_has_pov" => Function::Engine(Game::joystick_has_pov),
    "joystick_check_button" => Function::Engine(Game::joystick_check_button),
    "joystick_xpos" => Function::Engine(Game::joystick_xpos),
    "joystick_ypos" => Function::Engine(Game::joystick_ypos),
    "joystick_zpos" => Function::Engine(Game::joystick_zpos),
    "joystick_rpos" => Function::Engine(Game::joystick_rpos),
    "joystick_upos" => Function::Engine(Game::joystick_upos),
    "joystick_vpos" => Function::Engine(Game::joystick_vpos),
    "joystick_pov" => Function::Engine(Game::joystick_pov),
    "keyboard_clear" => Function::Engine(Game::keyboard_clear),
    "mouse_clear" => Function::Engine(Game::mouse_clear),
    "io_clear" => Function::Engine(Game::io_clear),
    "io_handle" => Function::Engine(Game::io_handle),
    "keyboard_wait" => Function::Engine(Game::keyboard_wait),
    "mouse_wait" => Function::Engine(Game::mouse_wait),
    "mplay_init_ipx" => Function::Engine(Game::mplay_init_ipx),
    "mplay_init_tcpip" => Function::Engine(Game::mplay_init_tcpip),
    "mplay_init_modem" => Function::Engine(Game::mplay_init_modem),
    "mplay_init_serial" => Function::Engine(Game::mplay_init_serial),
    "mplay_connect_status" => Function::Constant(Game::mplay_connect_status),
    "mplay_end" => Function::Engine(Game::mplay_end),
    "mplay_session_mode" => Function::Engine(Game::mplay_session_mode),
    "mplay_session_create" => Function::Engine(Game::mplay_session_create),
    "mplay_session_find" => Function::Engine(Game::mplay_session_find),
    "mplay_session_name" => Function::Constant(Game::mplay_session_name),
    "mplay_session_join" => Function::Engine(Game::mplay_session_join),
    "mplay_session_status" => Function::Constant(Game::mplay_session_status),
    "mplay_session_end" => Function::Engine(Game::mplay_session_end),
    "mplay_player_find" => Function::Engine(Game::mplay_player_find),
    "mplay_player_name" => Function::Constant(Game::mplay_player_name),
    "mplay_player_id" => Function::Constant(Game::mplay_player_id),
    "mplay_data_write" => Function::Engine(Game::mplay_data_write),
    "mplay_data_read" => Function::Engine(Game::mplay_data_read),
    "mplay_data_mode" => Function::Engine(Game::mplay_data_mode),
    "mplay_message_send" => Function::Volatile(Game::mplay_message_send),
    "mplay_message_send_guaranteed" => Function::Volatile(Game::mplay_message_send_guaranteed),
    "mplay_message_receive" => Function::Engine(Game::mplay_message_receive),
    "mplay_message_id" => Function::Constant(Game::mplay_message_id),
    "mplay_message_value" => Function::Constant(Game::mplay_message_value),
    "mplay_message_player" => Function::Constant(Game::mplay_message_player),
    "mplay_message_name" => Function::Constant(Game::mplay_message_name),
    "mplay_message_count" => Function::Constant(Game::mplay_message_count),
    "mplay_message_clear" => Function::Engine(Game::mplay_message_clear),
    "mplay_ipaddress" => Function::Engine(Game::mplay_ipaddress),
    "event_inherited" => Function::Runtime(Game::event_inherited),
    "event_perform" => Function::Runtime(Game::event_perform),
    "event_user" => Function::Runtime(Game::event_user),
    "event_perform_object" => Function::Runtime(Game::event_perform_object),
    "external_define" => Function::Engine(Game::external_define),
    "external_call" => Function::Runtime(Game::external_call),
    "external_free" => Function::Engine(Game::external_free),
    "get_function_address" => Function::Pure(Game::get_function_address),
    "external_define0" => Function::Engine(Game::external_define0),
    "external_call0" => Function::Engine(Game::external_call0),
    "external_define1" => Function::Engine(Game::external_define1),
    "external_call1" => Function::Engine(Game::external_call1),
    "external_define2" => Function::Engine(Game::external_define2),
    "external_call2" => Function::Engine(Game::external_call2),
    "external_define3" => Function::Engine(Game::external_define3),
    "external_call3" => Function::Engine(Game::external_call3),
    "external_define4" => Function::Engine(Game::external_define4),
    "external_call4" => Function::Engine(Game::external_call4),
    "external_define5" => Function::Engine(Game::external_define5),
    "external_call5" => Function::Engine(Game::external_call5),
    "external_define6" => Function::Engine(Game::external_define6),
    "external_call6" => Function::Engine(Game::external_call6),
    "external_define7" => Function::Engine(Game::external_define7),
    "external_call7" => Function::Engine(Game::external_call7),
    "external_define8" => Function::Engine(Game::external_define8),
    "external_call8" => Function::Engine(Game::external_call8),
    "execute_string" => Function::Runtime(Game::execute_string),
    "execute_file" => Function::Runtime(Game::execute_file),
    "window_handle" => Function::Constant(Game::window_handle),
    "show_debug_message" => Function::Volatile(Game::show_debug_message),
    "set_program_priority" => Function::Engine(Game::set_program_priority),
    "set_application_title" => Function::Pure(Game::set_application_title),
    "variable_global_exists" => Function::Constant(Game::variable_global_exists),
    "variable_global_get" => Function::Constant(Game::variable_global_get),
    "variable_global_array_get" => Function::Constant(Game::variable_global_array_get),
    "variable_global_array2_get" => Function::Constant(Game::variable_global_array2_get),
    "variable_global_set" => Function::Engine(Game::variable_global_set),
    "variable_global_array_set" => Function::Engine(Game::variable_global_array_set),
    "variable_global_array2_set" => Function::Engine(Game::variable_global_array2_set),
    "variable_local_exists" => Function::Runtime(Game::variable_local_exists),
    "variable_local_get" => Function::Runtime(Game::variable_local_get),
    "variable_local_array_get" => Function::Runtime(Game::variable_local_array_get),
    "variable_local_array2_get" => Function::Runtime(Game::variable_local_array2_get),
    "variable_local_set" => Function::Runtime(Game::variable_local_set),
    "variable_local_array_set" => Function::Runtime(Game::variable_local_array_set),
    "variable_local_array2_set" => Function::Runtime(Game::variable_local_array2_set),
    "clipboard_has_text" => Function::Volatile(Game::clipboard_has_text),
    "clipboard_set_text" => Function::Engine(Game::clipboard_set_text),
    "clipboard_get_text" => Function::Volatile(Game::clipboard_get_text),
    "date_current_datetime" => Function::Volatile(Game::date_current_datetime),
    "date_current_date" => Function::Volatile(Game::date_current_date),
    "date_current_time" => Function::Volatile(Game::date_current_time),
    "date_create_datetime" => Function::Pure(Game::date_create_datetime),
    "date_create_date" => Function::Pure(Game::date_create_date),
    "date_create_time" => Function::Pure(Game::date_create_time),
    "date_valid_datetime" => Function::Pure(Game::date_valid_datetime),
    "date_valid_date" => Function::Pure(Game::date_valid_date),
    "date_valid_time" => Function::Pure(Game::date_valid_time),
    "date_inc_year" => Function::Pure(Game::date_inc_year),
    "date_inc_month" => Function::Pure(Game::date_inc_month),
    "date_inc_week" => Function::Pure(Game::date_inc_week),
    "date_inc_day" => Function::Pure(Game::date_inc_day),
    "date_inc_hour" => Function::Pure(Game::date_inc_hour),
    "date_inc_minute" => Function::Pure(Game::date_inc_minute),
    "date_inc_second" => Function::Pure(Game::date_inc_second),
    "date_get_year" => Function::Pure(Game::date_get_year),
    "date_get_month" => Function::Pure(Game::date_get_month),
    "date_get_week" => Function::Pure(Game::date_get_week),
    "date_get_day" => Function::Pure(Game::date_get_day),
    "date_get_hour" => Function::Pure(Game::date_get_hour),
    "date_get_minute" => Function::Pure(Game::date_get_minute),
    "date_get_second" => Function::Pure(Game::date_get_second),
    "date_get_weekday" => Function::Pure(Game::date_get_weekday),
    "date_get_day_of_year" => Function::Pure(Game::date_get_day_of_year),
    "date_get_hour_of_year" => Function::Pure(Game::date_get_hour_of_year),
    "date_get_minute_of_year" => Function::Pure(Game::date_get_minute_of_year),
    "date_get_second_of_year" => Function::Pure(Game::date_get_second_of_year),
    "date_year_span" => Function::Pure(Game::date_year_span),
    "date_month_span" => Function::Pure(Game::date_month_span),
    "date_week_span" => Function::Pure(Game::date_week_span),
    "date_day_span" => Function::Pure(Game::date_day_span),
    "date_hour_span" => Function::Pure(Game::date_hour_span),
    "date_minute_span" => Function::Pure(Game::date_minute_span),
    "date_second_span" => Function::Pure(Game::date_second_span),
    "date_compare_datetime" => Function::Pure(Game::date_compare_datetime),
    "date_compare_date" => Function::Pure(Game::date_compare_date),
    "date_compare_time" => Function::Pure(Game::date_compare_time),
    "date_date_of" => Function::Pure(Game::date_date_of),
    "date_time_of" => Function::Pure(Game::date_time_of),
    "date_datetime_string" => Function::Constant(Game::date_datetime_string),
    "date_date_string" => Function::Constant(Game::date_date_string),
    "date_time_string" => Function::Constant(Game::date_time_string),
    "date_days_in_month" => Function::Pure(Game::date_days_in_month),
    "date_days_in_year" => Function::Pure(Game::date_days_in_year),
    "date_leap_year" => Function::Pure(Game::date_leap_year),
    "date_is_today" => Function::Volatile(Game::date_is_today),
    "sprite_name" => Function::Constant(Game::sprite_get_name),
    "sprite_exists" => Function::Constant(Game::sprite_exists),
    "sprite_get_name" => Function::Constant(Game::sprite_get_name),
    "sprite_get_number" => Function::Constant(Game::sprite_get_number),
    "sprite_get_width" => Function::Constant(Game::sprite_get_width),
    "sprite_get_height" => Function::Constant(Game::sprite_get_height),
    "sprite_get_xoffset" => Function::Constant(Game::sprite_get_xoffset),
    "sprite_get_yoffset" => Function::Constant(Game::sprite_get_yoffset),
    "sprite_get_bbox_left" => Function::Constant(Game::sprite_get_bbox_left),
    "sprite_get_bbox_right" => Function::Constant(Game::sprite_get_bbox_right),
    "sprite_get_bbox_top" => Function::Constant(Game::sprite_get_bbox_top),
    "sprite_get_bbox_bottom" => Function::Constant(Game::sprite_get_bbox_bottom),
    "sprite_set_offset" => Function::Engine(Game::sprite_set_offset),
    "sprite_set_alpha_from_sprite" => Function::Engine(Game::sprite_set_alpha_from_sprite),
    "sprite_create_from_screen" => Function::Engine(Game::sprite_create_from_screen),
    "sprite_add_from_screen" => Function::Engine(Game::sprite_add_from_screen),
    "sprite_create_from_surface" => Function::Engine(Game::sprite_create_from_surface),
    "sprite_add_from_surface" => Function::Engine(Game::sprite_add_from_surface),
    "sprite_add" => Function::Engine(Game::sprite_add),
    "sprite_replace" => Function::Engine(Game::sprite_replace),
    "sprite_add_sprite" => Function::Engine(Game::sprite_add_sprite),
    "sprite_replace_sprite" => Function::Engine(Game::sprite_replace_sprite),
    "sprite_delete" => Function::Engine(Game::sprite_delete),
    "sprite_duplicate" => Function::Engine(Game::sprite_duplicate),
    "sprite_assign" => Function::Engine(Game::sprite_assign),
    "sprite_merge" => Function::Engine(Game::sprite_merge),
    "sprite_save" => Function::Engine(Game::sprite_save),
    "sprite_save_strip" => Function::Engine(Game::sprite_save_strip),
    "sprite_collision_mask" => Function::Engine(Game::sprite_collision_mask),
    "sprite_set_cache_size" => Function::Pure(Game::sprite_set_cache_size),
    "sprite_set_cache_size_ext" => Function::Pure(Game::sprite_set_cache_size_ext),
    "background_name" => Function::Constant(Game::background_get_name),
    "background_exists" => Function::Constant(Game::background_exists),
    "background_get_name" => Function::Constant(Game::background_get_name),
    "background_get_width" => Function::Constant(Game::background_get_width),
    "background_get_height" => Function::Constant(Game::background_get_height),
    "background_set_alpha_from_background" => Function::Engine(Game::background_set_alpha_from_background),
    "background_create_from_screen" => Function::Engine(Game::background_create_from_screen),
    "background_create_from_surface" => Function::Engine(Game::background_create_from_surface),
    "background_create_color" => Function::Engine(Game::background_create_color),
    "background_create_gradient" => Function::Engine(Game::background_create_gradient),
    "background_add" => Function::Engine(Game::background_add),
    "background_replace" => Function::Engine(Game::background_replace),
    "background_add_background" => Function::Engine(Game::background_add_background),
    "background_replace_background" => Function::Engine(Game::background_replace_background),
    "background_delete" => Function::Engine(Game::background_delete),
    "background_duplicate" => Function::Engine(Game::background_duplicate),
    "background_assign" => Function::Engine(Game::background_assign),
    "background_save" => Function::Engine(Game::background_save),
    "sound_name" => Function::Constant(Game::sound_get_name),
    "sound_exists" => Function::Constant(Game::sound_exists),
    "sound_get_name" => Function::Constant(Game::sound_get_name),
    "sound_get_kind" => Function::Constant(Game::sound_get_kind),
    "sound_get_preload" => Function::Constant(Game::sound_get_preload),
    "sound_discard" => Function::Engine(Game::sound_discard),
    "sound_restore" => Function::Engine(Game::sound_restore),
    "sound_add" => Function::Engine(Game::sound_add),
    "sound_replace" => Function::Engine(Game::sound_replace),
    "sound_delete" => Function::Engine(Game::sound_delete),
    "font_name" => Function::Constant(Game::font_get_name),
    "font_exists" => Function::Constant(Game::font_exists),
    "font_get_name" => Function::Constant(Game::font_get_name),
    "font_get_fontname" => Function::Constant(Game::font_get_fontname),
    "font_get_size" => Function::Constant(Game::font_get_size),
    "font_get_bold" => Function::Constant(Game::font_get_bold),
    "font_get_italic" => Function::Constant(Game::font_get_italic),
    "font_get_first" => Function::Constant(Game::font_get_first),
    "font_get_last" => Function::Constant(Game::font_get_last),
    "font_add" => Function::Engine(Game::font_add),
    "font_replace" => Function::Engine(Game::font_replace),
    "font_add_sprite" => Function::Engine(Game::font_add_sprite),
    "font_replace_sprite" => Function::Engine(Game::font_replace_sprite),
    "font_delete" => Function::Engine(Game::font_delete),
    "script_name" => Function::Constant(Game::script_get_name),
    "script_exists" => Function::Constant(Game::script_exists),
    "script_get_name" => Function::Constant(Game::script_get_name),
    "script_get_text" => Function::Constant(Game::script_get_text),
    "script_execute" => Function::Runtime(Game::script_execute),
    "path_name" => Function::Constant(Game::path_get_name),
    "path_exists" => Function::Constant(Game::path_exists),
    "path_get_name" => Function::Constant(Game::path_get_name),
    "path_get_length" => Function::Constant(Game::path_get_length),
    "path_get_kind" => Function::Constant(Game::path_get_kind),
    "path_get_closed" => Function::Constant(Game::path_get_closed),
    "path_get_precision" => Function::Constant(Game::path_get_precision),
    "path_get_number" => Function::Constant(Game::path_get_number),
    "path_get_point_x" => Function::Constant(Game::path_get_point_x),
    "path_get_point_y" => Function::Constant(Game::path_get_point_y),
    "path_get_point_speed" => Function::Constant(Game::path_get_point_speed),
    "path_get_x" => Function::Constant(Game::path_get_x),
    "path_get_y" => Function::Constant(Game::path_get_y),
    "path_get_speed" => Function::Constant(Game::path_get_speed),
    "path_set_kind" => Function::Engine(Game::path_set_kind),
    "path_set_closed" => Function::Engine(Game::path_set_closed),
    "path_set_precision" => Function::Engine(Game::path_set_precision),
    "path_add" => Function::Engine(Game::path_add),
    "path_duplicate" => Function::Engine(Game::path_duplicate),
    "path_assign" => Function::Engine(Game::path_assign),
    "path_append" => Function::Engine(Game::path_append),
    "path_delete" => Function::Engine(Game::path_delete),
    "path_add_point" => Function::Engine(Game::path_add_point),
    "path_insert_point" => Function::Engine(Game::path_insert_point),
    "path_change_point" => Function::Engine(Game::path_change_point),
    "path_delete_point" => Function::Engine(Game::path_delete_point),
    "path_clear_points" => Function::Engine(Game::path_clear_points),
    "path_reverse" => Function::Engine(Game::path_reverse),
    "path_mirror" => Function::Engine(Game::path_mirror),
    "path_flip" => Function::Engine(Game::path_flip),
    "path_rotate" => Function::Engine(Game::path_rotate),
    "path_scale" => Function::Engine(Game::path_scale),
    "path_shift" => Function::Engine(Game::path_shift),
    "timeline_name" => Function::Constant(Game::timeline_get_name),
    "timeline_exists" => Function::Constant(Game::timeline_exists),
    "timeline_get_name" => Function::Constant(Game::timeline_get_name),
    "timeline_add" => Function::Engine(Game::timeline_add),
    "timeline_delete" => Function::Engine(Game::timeline_delete),
    "timeline_clear" => Function::Engine(Game::timeline_clear),
    "timeline_moment_clear" => Function::Engine(Game::timeline_moment_clear),
    "timeline_moment_add" => Function::Engine(Game::timeline_moment_add),
    "object_name" => Function::Constant(Game::object_get_name),
    "object_exists" => Function::Constant(Game::object_exists),
    "object_get_name" => Function::Constant(Game::object_get_name),
    "object_get_sprite" => Function::Constant(Game::object_get_sprite),
    "object_get_solid" => Function::Constant(Game::object_get_solid),
    "object_get_visible" => Function::Constant(Game::object_get_visible),
    "object_get_depth" => Function::Constant(Game::object_get_depth),
    "object_get_persistent" => Function::Constant(Game::object_get_persistent),
    "object_get_mask" => Function::Constant(Game::object_get_mask),
    "object_get_parent" => Function::Constant(Game::object_get_parent),
    "object_is_ancestor" => Function::Constant(Game::object_is_ancestor),
    "object_set_sprite" => Function::Engine(Game::object_set_sprite),
    "object_set_solid" => Function::Engine(Game::object_set_solid),
    "object_set_visible" => Function::Engine(Game::object_set_visible),
    "object_set_depth" => Function::Engine(Game::object_set_depth),
    "object_set_persistent" => Function::Engine(Game::object_set_persistent),
    "object_set_mask" => Function::Engine(Game::object_set_mask),
    "object_set_parent" => Function::Engine(Game::object_set_parent),
    "object_add" => Function::Engine(Game::object_add),
    "object_delete" => Function::Engine(Game::object_delete),
    "object_event_clear" => Function::Engine(Game::object_event_clear),
    "object_event_add" => Function::Engine(Game::object_event_add),
    "room_name" => Function::Constant(Game::room_get_name),
    "room_exists" => Function::Constant(Game::room_exists),
    "room_get_name" => Function::Constant(Game::room_get_name),
    "room_set_width" => Function::Engine(Game::room_set_width),
    "room_set_height" => Function::Engine(Game::room_set_height),
    "room_set_caption" => Function::Engine(Game::room_set_caption),
    "room_set_persistent" => Function::Engine(Game::room_set_persistent),
    "room_set_code" => Function::Engine(Game::room_set_code),
    "room_set_background_color" => Function::Engine(Game::room_set_background_color),
    "room_set_background" => Function::Engine(Game::room_set_background),
    "room_set_view" => Function::Engine(Game::room_set_view),
    "room_set_view_enabled" => Function::Engine(Game::room_set_view_enabled),
    "room_add" => Function::Engine(Game::room_add),
    "room_duplicate" => Function::Engine(Game::room_duplicate),
    "room_assign" => Function::Engine(Game::room_assign),
    "room_instance_add" => Function::Engine(Game::room_instance_add),
    "room_instance_clear" => Function::Engine(Game::room_instance_clear),
    "room_tile_add" => Function::Engine(Game::room_tile_add),
    "room_tile_add_ext" => Function::Engine(Game::room_tile_add_ext),
    "room_tile_clear" => Function::Engine(Game::room_tile_clear),
    "part_type_create" => Function::Engine(Game::part_type_create),
    "part_type_destroy" => Function::Engine(Game::part_type_destroy),
    "part_type_exists" => Function::Constant(Game::part_type_exists),
    "part_type_clear" => Function::Engine(Game::part_type_clear),
    "part_type_shape" => Function::Engine(Game::part_type_shape),
    "part_type_sprite" => Function::Engine(Game::part_type_sprite),
    "part_type_size" => Function::Engine(Game::part_type_size),
    "part_type_scale" => Function::Engine(Game::part_type_scale),
    "part_type_life" => Function::Engine(Game::part_type_life),
    "part_type_step" => Function::Engine(Game::part_type_step),
    "part_type_death" => Function::Engine(Game::part_type_death),
    "part_type_speed" => Function::Engine(Game::part_type_speed),
    "part_type_direction" => Function::Engine(Game::part_type_direction),
    "part_type_orientation" => Function::Engine(Game::part_type_orientation),
    "part_type_gravity" => Function::Engine(Game::part_type_gravity),
    "part_type_color_mix" => Function::Engine(Game::part_type_color_mix),
    "part_type_color_rgb" => Function::Engine(Game::part_type_color_rgb),
    "part_type_color_hsv" => Function::Engine(Game::part_type_color_hsv),
    "part_type_color1" => Function::Engine(Game::part_type_color1),
    "part_type_color2" => Function::Engine(Game::part_type_color2),
    "part_type_color3" => Function::Engine(Game::part_type_color3),
    "part_type_color" => Function::Engine(Game::part_type_color3),
    "part_type_alpha1" => Function::Engine(Game::part_type_alpha1),
    "part_type_alpha2" => Function::Engine(Game::part_type_alpha2),
    "part_type_alpha3" => Function::Engine(Game::part_type_alpha3),
    "part_type_alpha" => Function::Engine(Game::part_type_alpha3),
    "part_type_blend" => Function::Engine(Game::part_type_blend),
    "part_system_create" => Function::Engine(Game::part_system_create),
    "part_system_destroy" => Function::Engine(Game::part_system_destroy),
    "part_system_exists" => Function::Constant(Game::part_system_exists),
    "part_system_clear" => Function::Engine(Game::part_system_clear),
    "part_system_draw_order" => Function::Engine(Game::part_system_draw_order),
    "part_system_depth" => Function::Engine(Game::part_system_depth),
    "part_system_position" => Function::Engine(Game::part_system_position),
    "part_system_automatic_update" => Function::Engine(Game::part_system_automatic_update),
    "part_system_automatic_draw" => Function::Engine(Game::part_system_automatic_draw),
    "part_system_update" => Function::Engine(Game::part_system_update),
    "part_system_drawit" => Function::Engine(Game::part_system_drawit),
    "part_particles_create" => Function::Engine(Game::part_particles_create),
    "part_particles_create_color" => Function::Engine(Game::part_particles_create_color),
    "part_particles_clear" => Function::Engine(Game::part_particles_clear),
    "part_particles_count" => Function::Constant(Game::part_particles_count),
    "part_emitter_create" => Function::Engine(Game::part_emitter_create),
    "part_emitter_destroy" => Function::Engine(Game::part_emitter_destroy),
    "part_emitter_destroy_all" => Function::Engine(Game::part_emitter_destroy_all),
    "part_emitter_exists" => Function::Constant(Game::part_emitter_exists),
    "part_emitter_clear" => Function::Engine(Game::part_emitter_clear),
    "part_emitter_region" => Function::Engine(Game::part_emitter_region),
    "part_emitter_burst" => Function::Engine(Game::part_emitter_burst),
    "part_emitter_stream" => Function::Engine(Game::part_emitter_stream),
    "part_attractor_create" => Function::Engine(Game::part_attractor_create),
    "part_attractor_destroy" => Function::Engine(Game::part_attractor_destroy),
    "part_attractor_destroy_all" => Function::Engine(Game::part_attractor_destroy_all),
    "part_attractor_exists" => Function::Constant(Game::part_attractor_exists),
    "part_attractor_clear" => Function::Engine(Game::part_attractor_clear),
    "part_attractor_position" => Function::Engine(Game::part_attractor_position),
    "part_attractor_force" => Function::Engine(Game::part_attractor_force),
    "part_destroyer_create" => Function::Engine(Game::part_destroyer_create),
    "part_destroyer_destroy" => Function::Engine(Game::part_destroyer_destroy),
    "part_destroyer_destroy_all" => Function::Engine(Game::part_destroyer_destroy_all),
    "part_destroyer_exists" => Function::Constant(Game::part_destroyer_exists),
    "part_destroyer_clear" => Function::Engine(Game::part_destroyer_clear),
    "part_destroyer_region" => Function::Engine(Game::part_destroyer_region),
    "part_deflector_create" => Function::Engine(Game::part_deflector_create),
    "part_deflector_destroy" => Function::Engine(Game::part_deflector_destroy),
    "part_deflector_destroy_all" => Function::Engine(Game::part_deflector_destroy_all),
    "part_deflector_exists" => Function::Constant(Game::part_deflector_exists),
    "part_deflector_clear" => Function::Engine(Game::part_deflector_clear),
    "part_deflector_region" => Function::Engine(Game::part_deflector_region),
    "part_deflector_kind" => Function::Engine(Game::part_deflector_kind),
    "part_deflector_friction" => Function::Engine(Game::part_deflector_friction),
    "part_changer_create" => Function::Engine(Game::part_changer_create),
    "part_changer_destroy" => Function::Engine(Game::part_changer_destroy),
    "part_changer_destroy_all" => Function::Engine(Game::part_changer_destroy_all),
    "part_changer_exists" => Function::Constant(Game::part_changer_exists),
    "part_changer_clear" => Function::Engine(Game::part_changer_clear),
    "part_changer_region" => Function::Engine(Game::part_changer_region),
    "part_changer_kind" => Function::Engine(Game::part_changer_kind),
    "part_changer_types" => Function::Engine(Game::part_changer_types),
    "effect_create_below" => Function::Engine(Game::effect_create_below),
    "effect_create_above" => Function::Engine(Game::effect_create_above),
    "effect_clear" => Function::Engine(Game::effect_clear),
    "ds_set_precision" => Function::Engine(Game::ds_set_precision),
    "ds_stack_create" => Function::Engine(Game::ds_stack_create),
    "ds_stack_destroy" => Function::Engine(Game::ds_stack_destroy),
    "ds_stack_clear" => Function::Engine(Game::ds_stack_clear),
    "ds_stack_copy" => Function::Engine(Game::ds_stack_copy),
    "ds_stack_size" => Function::Constant(Game::ds_stack_size),
    "ds_stack_empty" => Function::Constant(Game::ds_stack_empty),
    "ds_stack_push" => Function::Engine(Game::ds_stack_push),
    "ds_stack_pop" => Function::Engine(Game::ds_stack_pop),
    "ds_stack_top" => Function::Constant(Game::ds_stack_top),
    "ds_stack_write" => Function::Constant(Game::ds_stack_write),
    "ds_stack_read" => Function::Engine(Game::ds_stack_read),
    "ds_queue_create" => Function::Engine(Game::ds_queue_create),
    "ds_queue_destroy" => Function::Engine(Game::ds_queue_destroy),
    "ds_queue_clear" => Function::Engine(Game::ds_queue_clear),
    "ds_queue_copy" => Function::Engine(Game::ds_queue_copy),
    "ds_queue_size" => Function::Constant(Game::ds_queue_size),
    "ds_queue_empty" => Function::Constant(Game::ds_queue_empty),
    "ds_queue_enqueue" => Function::Engine(Game::ds_queue_enqueue),
    "ds_queue_dequeue" => Function::Engine(Game::ds_queue_dequeue),
    "ds_queue_head" => Function::Constant(Game::ds_queue_head),
    "ds_queue_tail" => Function::Constant(Game::ds_queue_tail),
    "ds_queue_write" => Function::Constant(Game::ds_queue_write),
    "ds_queue_read" => Function::Engine(Game::ds_queue_read),
    "ds_list_create" => Function::Engine(Game::ds_list_create),
    "ds_list_destroy" => Function::Engine(Game::ds_list_destroy),
    "ds_list_clear" => Function::Engine(Game::ds_list_clear),
    "ds_list_copy" => Function::Engine(Game::ds_list_copy),
    "ds_list_size" => Function::Constant(Game::ds_list_size),
    "ds_list_empty" => Function::Constant(Game::ds_list_empty),
    "ds_list_add" => Function::Engine(Game::ds_list_add),
    "ds_list_insert" => Function::Engine(Game::ds_list_insert),
    "ds_list_replace" => Function::Engine(Game::ds_list_replace),
    "ds_list_delete" => Function::Engine(Game::ds_list_delete),
    "ds_list_find_index" => Function::Constant(Game::ds_list_find_index),
    "ds_list_find_value" => Function::Constant(Game::ds_list_find_value),
    "ds_list_sort" => Function::Engine(Game::ds_list_sort),
    "ds_list_shuffle" => Function::Engine(Game::ds_list_shuffle),
    "ds_list_write" => Function::Constant(Game::ds_list_write),
    "ds_list_read" => Function::Engine(Game::ds_list_read),
    "ds_map_create" => Function::Engine(Game::ds_map_create),
    "ds_map_destroy" => Function::Engine(Game::ds_map_destroy),
    "ds_map_clear" => Function::Engine(Game::ds_map_clear),
    "ds_map_copy" => Function::Engine(Game::ds_map_copy),
    "ds_map_size" => Function::Constant(Game::ds_map_size),
    "ds_map_empty" => Function::Constant(Game::ds_map_empty),
    "ds_map_add" => Function::Engine(Game::ds_map_add),
    "ds_map_replace" => Function::Engine(Game::ds_map_replace),
    "ds_map_delete" => Function::Engine(Game::ds_map_delete),
    "ds_map_exists" => Function::Constant(Game::ds_map_exists),
    "ds_map_find_value" => Function::Constant(Game::ds_map_find_value),
    "ds_map_find_previous" => Function::Constant(Game::ds_map_find_previous),
    "ds_map_find_next" => Function::Constant(Game::ds_map_find_next),
    "ds_map_find_first" => Function::Constant(Game::ds_map_find_first),
    "ds_map_find_last" => Function::Constant(Game::ds_map_find_last),
    "ds_map_write" => Function::Constant(Game::ds_map_write),
    "ds_map_read" => Function::Engine(Game::ds_map_read),
    "ds_priority_create" => Function::Engine(Game::ds_priority_create),
    "ds_priority_destroy" => Function::Engine(Game::ds_priority_destroy),
    "ds_priority_clear" => Function::Engine(Game::ds_priority_clear),
    "ds_priority_copy" => Function::Engine(Game::ds_priority_copy),
    "ds_priority_size" => Function::Constant(Game::ds_priority_size),
    "ds_priority_empty" => Function::Constant(Game::ds_priority_empty),
    "ds_priority_add" => Function::Engine(Game::ds_priority_add),
    "ds_priority_change_priority" => Function::Engine(Game::ds_priority_change_priority),
    "ds_priority_find_priority" => Function::Constant(Game::ds_priority_find_priority),
    "ds_priority_delete_value" => Function::Engine(Game::ds_priority_delete_value),
    "ds_priority_delete_min" => Function::Engine(Game::ds_priority_delete_min),
    "ds_priority_find_min" => Function::Constant(Game::ds_priority_find_min),
    "ds_priority_delete_max" => Function::Engine(Game::ds_priority_delete_max),
    "ds_priority_find_max" => Function::Constant(Game::ds_priority_find_max),
    "ds_priority_write" => Function::Constant(Game::ds_priority_write),
    "ds_priority_read" => Function::Engine(Game::ds_priority_read),
    "ds_grid_create" => Function::Engine(Game::ds_grid_create),
    "ds_grid_destroy" => Function::Engine(Game::ds_grid_destroy),
    "ds_grid_copy" => Function::Engine(Game::ds_grid_copy),
    "ds_grid_resize" => Function::Engine(Game::ds_grid_resize),
    "ds_grid_width" => Function::Constant(Game::ds_grid_width),
    "ds_grid_height" => Function::Constant(Game::ds_grid_height),
    "ds_grid_clear" => Function::Engine(Game::ds_grid_clear),
    "ds_grid_set" => Function::Engine(Game::ds_grid_set),
    "ds_grid_add" => Function::Engine(Game::ds_grid_add),
    "ds_grid_multiply" => Function::Engine(Game::ds_grid_multiply),
    "ds_grid_set_region" => Function::Engine(Game::ds_grid_set_region),
    "ds_grid_add_region" => Function::Engine(Game::ds_grid_add_region),
    "ds_grid_multiply_region" => Function::Engine(Game::ds_grid_multiply_region),
    "ds_grid_set_disk" => Function::Engine(Game::ds_grid_set_disk),
    "ds_grid_add_disk" => Function::Engine(Game::ds_grid_add_disk),
    "ds_grid_multiply_disk" => Function::Engine(Game::ds_grid_multiply_disk),
    "ds_grid_set_grid_region" => Function::Engine(Game::ds_grid_set_grid_region),
    "ds_grid_add_grid_region" => Function::Engine(Game::ds_grid_add_grid_region),
    "ds_grid_multiply_grid_region" => Function::Engine(Game::ds_grid_multiply_grid_region),
    "ds_grid_get" => Function::Constant(Game::ds_grid_get),
    "ds_grid_get_sum" => Function::Constant(Game::ds_grid_get_sum),
    "ds_grid_get_max" => Function::Constant(Game::ds_grid_get_max),
    "ds_grid_get_min" => Function::Constant(Game::ds_grid_get_min),
    "ds_grid_get_mean" => Function::Constant(Game::ds_grid_get_mean),
    "ds_grid_get_disk_sum" => Function::Constant(Game::ds_grid_get_disk_sum),
    "ds_grid_get_disk_max" => Function::Constant(Game::ds_grid_get_disk_max),
    "ds_grid_get_disk_min" => Function::Constant(Game::ds_grid_get_disk_min),
    "ds_grid_get_disk_mean" => Function::Constant(Game::ds_grid_get_disk_mean),
    "ds_grid_value_exists" => Function::Constant(Game::ds_grid_value_exists),
    "ds_grid_value_x" => Function::Constant(Game::ds_grid_value_x),
    "ds_grid_value_y" => Function::Constant(Game::ds_grid_value_y),
    "ds_grid_value_disk_exists" => Function::Constant(Game::ds_grid_value_disk_exists),
    "ds_grid_value_disk_x" => Function::Constant(Game::ds_grid_value_disk_x),
    "ds_grid_value_disk_y" => Function::Constant(Game::ds_grid_value_disk_y),
    "ds_grid_shuffle" => Function::Engine(Game::ds_grid_shuffle),
    "ds_grid_write" => Function::Constant(Game::ds_grid_write),
    "ds_grid_read" => Function::Engine(Game::ds_grid_read),
    "sound_play" => Function::Engine(Game::sound_play),
    "sound_loop" => Function::Engine(Game::sound_loop),
    "sound_stop" => Function::Engine(Game::sound_stop),
    "sound_stop_all" => Function::Engine(Game::sound_stop_all),
    "sound_isplaying" => Function::Volatile(Game::sound_isplaying),
    "sound_volume" => Function::Engine(Game::sound_volume),
    "sound_fade" => Function::Engine(Game::sound_fade),
    "sound_pan" => Function::Engine(Game::sound_pan),
    "sound_background_tempo" => Function::Engine(Game::sound_background_tempo),
    "sound_global_volume" => Function::Engine(Game::sound_global_volume),
    "sound_set_search_directory" => Function::Engine(Game::sound_set_search_directory),
    "sound_effect_set" => Function::Engine(Game::sound_effect_set),
    "sound_effect_chorus" => Function::Engine(Game::sound_effect_chorus),
    "sound_effect_compressor" => Function::Engine(Game::sound_effect_compressor),
    "sound_effect_echo" => Function::Engine(Game::sound_effect_echo),
    "sound_effect_flanger" => Function::Engine(Game::sound_effect_flanger),
    "sound_effect_gargle" => Function::Engine(Game::sound_effect_gargle),
    "sound_effect_equalizer" => Function::Engine(Game::sound_effect_equalizer),
    "sound_effect_reverb" => Function::Engine(Game::sound_effect_reverb),
    "sound_3d_set_sound_position" => Function::Engine(Game::sound_3d_set_sound_position),
    "sound_3d_set_sound_velocity" => Function::Engine(Game::sound_3d_set_sound_velocity),
    "sound_3d_set_sound_distance" => Function::Engine(Game::sound_3d_set_sound_distance),
    "sound_3d_set_sound_cone" => Function::Engine(Game::sound_3d_set_sound_cone),
    "cd_init" => Function::Volatile(Game::cd_init),
    "cd_present" => Function::Volatile(Game::cd_present),
    "cd_number" => Function::Volatile(Game::cd_number),
    "cd_playing" => Function::Volatile(Game::cd_playing),
    "cd_paused" => Function::Volatile(Game::cd_paused),
    "cd_track" => Function::Volatile(Game::cd_track),
    "cd_length" => Function::Volatile(Game::cd_length),
    "cd_track_length" => Function::Volatile(Game::cd_track_length),
    "cd_position" => Function::Volatile(Game::cd_position),
    "cd_track_position" => Function::Volatile(Game::cd_track_position),
    "cd_play" => Function::Volatile(Game::cd_play),
    "cd_stop" => Function::Volatile(Game::cd_stop),
    "cd_pause" => Function::Volatile(Game::cd_pause),
    "cd_resume" => Function::Volatile(Game::cd_resume),
    "cd_set_position" => Function::Volatile(Game::cd_set_position),
    "cd_set_track_position" => Function::Volatile(Game::cd_set_track_position),
    "cd_open_door" => Function::Volatile(Game::cd_open_door),
    "cd_close_door" => Function::Volatile(Game::cd_close_door),
    "MCI_command" => Function::Volatile(Game::mci_command),
    "d3d_start" => Function::Engine(Game::d3d_start),
    "d3d_end" => Function::Engine(Game::d3d_end),
    "d3d_set_perspective" => Function::Engine(Game::d3d_set_perspective),
    "d3d_set_hidden" => Function::Engine(Game::d3d_set_hidden),
    "d3d_set_depth" => Function::Engine(Game::d3d_set_depth),
    "d3d_set_zwriteenable" => Function::Engine(Game::d3d_set_zwriteenable),
    "d3d_set_lighting" => Function::Engine(Game::d3d_set_lighting),
    "d3d_set_shading" => Function::Engine(Game::d3d_set_shading),
    "d3d_set_fog" => Function::Engine(Game::d3d_set_fog),
    "d3d_set_culling" => Function::Engine(Game::d3d_set_culling),
    "d3d_primitive_begin" => Function::Engine(Game::d3d_primitive_begin),
    "d3d_primitive_begin_texture" => Function::Engine(Game::d3d_primitive_begin_texture),
    "d3d_primitive_end" => Function::Engine(Game::d3d_primitive_end),
    "d3d_vertex" => Function::Engine(Game::d3d_vertex),
    "d3d_vertex_color" => Function::Engine(Game::d3d_vertex_color),
    "d3d_vertex_texture" => Function::Engine(Game::d3d_vertex_texture),
    "d3d_vertex_texture_color" => Function::Engine(Game::d3d_vertex_texture_color),
    "d3d_vertex_normal" => Function::Engine(Game::d3d_vertex_normal),
    "d3d_vertex_normal_color" => Function::Engine(Game::d3d_vertex_normal_color),
    "d3d_vertex_normal_texture" => Function::Engine(Game::d3d_vertex_normal_texture),
    "d3d_vertex_normal_texture_color" => Function::Engine(Game::d3d_vertex_normal_texture_color),
    "d3d_draw_block" => Function::Engine(Game::d3d_draw_block),
    "d3d_draw_cylinder" => Function::Engine(Game::d3d_draw_cylinder),
    "d3d_draw_cone" => Function::Engine(Game::d3d_draw_cone),
    "d3d_draw_ellipsoid" => Function::Engine(Game::d3d_draw_ellipsoid),
    "d3d_draw_wall" => Function::Engine(Game::d3d_draw_wall),
    "d3d_draw_floor" => Function::Engine(Game::d3d_draw_floor),
    "d3d_set_projection" => Function::Engine(Game::d3d_set_projection),
    "d3d_set_projection_ext" => Function::Engine(Game::d3d_set_projection_ext),
    "d3d_set_projection_ortho" => Function::Engine(Game::d3d_set_projection_ortho),
    "d3d_set_projection_perspective" => Function::Engine(Game::d3d_set_projection_perspective),
    "d3d_transform_set_identity" => Function::Engine(Game::d3d_transform_set_identity),
    "d3d_transform_set_translation" => Function::Engine(Game::d3d_transform_set_translation),
    "d3d_transform_set_scaling" => Function::Engine(Game::d3d_transform_set_scaling),
    "d3d_transform_set_rotation_x" => Function::Engine(Game::d3d_transform_set_rotation_x),
    "d3d_transform_set_rotation_y" => Function::Engine(Game::d3d_transform_set_rotation_y),
    "d3d_transform_set_rotation_z" => Function::Engine(Game::d3d_transform_set_rotation_z),
    "d3d_transform_set_rotation_axis" => Function::Engine(Game::d3d_transform_set_rotation_axis),
    "d3d_transform_add_translation" => Function::Engine(Game::d3d_transform_add_translation),
    "d3d_transform_add_scaling" => Function::Engine(Game::d3d_transform_add_scaling),
    "d3d_transform_add_rotation_x" => Function::Engine(Game::d3d_transform_add_rotation_x),
    "d3d_transform_add_rotation_y" => Function::Engine(Game::d3d_transform_add_rotation_y),
    "d3d_transform_add_rotation_z" => Function::Engine(Game::d3d_transform_add_rotation_z),
    "d3d_transform_add_rotation_axis" => Function::Engine(Game::d3d_transform_add_rotation_axis),
    "d3d_transform_stack_clear" => Function::Engine(Game::d3d_transform_stack_clear),
    "d3d_transform_stack_empty" => Function::Constant(Game::d3d_transform_stack_empty),
    "d3d_transform_stack_push" => Function::Engine(Game::d3d_transform_stack_push),
    "d3d_transform_stack_pop" => Function::Engine(Game::d3d_transform_stack_pop),
    "d3d_transform_stack_top" => Function::Engine(Game::d3d_transform_stack_top),
    "d3d_transform_stack_discard" => Function::Engine(Game::d3d_transform_stack_discard),
    "d3d_light_define_ambient" => Function::Engine(Game::d3d_light_define_ambient),
    "d3d_light_define_direction" => Function::Engine(Game::d3d_light_define_direction),
    "d3d_light_define_point" => Function::Engine(Game::d3d_light_define_point),
    "d3d_light_enable" => Function::Engine(Game::d3d_light_enable),
    "d3d_model_create" => Function::Engine(Game::d3d_model_create),
    "d3d_model_destroy" => Function::Engine(Game::d3d_model_destroy),
    "d3d_model_clear" => Function::Engine(Game::d3d_model_clear),
    "d3d_model_load" => Function::Engine(Game::d3d_model_load),
    "d3d_model_save" => Function::Engine(Game::d3d_model_save),
    "d3d_model_draw" => Function::Engine(Game::d3d_model_draw),
    "d3d_model_primitive_begin" => Function::Engine(Game::d3d_model_primitive_begin),
    "d3d_model_primitive_end" => Function::Engine(Game::d3d_model_primitive_end),
    "d3d_model_vertex" => Function::Engine(Game::d3d_model_vertex),
    "d3d_model_vertex_color" => Function::Engine(Game::d3d_model_vertex_color),
    "d3d_model_vertex_texture" => Function::Engine(Game::d3d_model_vertex_texture),
    "d3d_model_vertex_texture_color" => Function::Engine(Game::d3d_model_vertex_texture_color),
    "d3d_model_vertex_normal" => Function::Engine(Game::d3d_model_vertex_normal),
    "d3d_model_vertex_normal_color" => Function::Engine(Game::d3d_model_vertex_normal_color),
    "d3d_model_vertex_normal_texture" => Function::Engine(Game::d3d_model_vertex_normal_texture),
    "d3d_model_vertex_normal_texture_color" => Function::Engine(Game::d3d_model_vertex_normal_texture_color),
    "d3d_model_block" => Function::Engine(Game::d3d_model_block),
    "d3d_model_cylinder" => Function::Engine(Game::d3d_model_cylinder),
    "d3d_model_cone" => Function::Engine(Game::d3d_model_cone),
    "d3d_model_ellipsoid" => Function::Engine(Game::d3d_model_ellipsoid),
    "d3d_model_wall" => Function::Engine(Game::d3d_model_wall),
    "d3d_model_floor" => Function::Engine(Game::d3d_model_floor),
};
